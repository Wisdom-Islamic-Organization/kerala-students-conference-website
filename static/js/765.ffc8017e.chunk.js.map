{"version":3,"file":"static/js/765.ffc8017e.chunk.js","mappings":"kQAMA,MAWMA,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQC,0CACRC,WAAYD,6CACZE,UAAWF,6BACXG,cAAeH,iDACfI,kBAAmBJ,cACnBK,MAAOL,2CACPM,cAAeN,iBAQXO,IADYC,EAAAA,EAAAA,IAAaX,IACpBY,EAAAA,EAAAA,IAAaZ,KACXa,EAAAA,EAAAA,IAAQb,IACLc,EAAAA,EAAAA,IAAWd,G,cCC3B,MAAMe,EAAyB,CAC7BC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,SAAU,GACVC,OAAQ,GACRC,QAAS,GACTC,YAAa,GACbC,YAAa,GACbC,iBAAkB,GAClBC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,eAAgB,GAChBC,oBAAqB,MAGVC,EAAWC,IACtB,MAAMC,GAAUC,EAAAA,EAAAA,OACTC,EAAWC,IAAgBC,EAAAA,EAAAA,UAG/B,CACDC,QAAMC,EAAAA,EAAAA,GAAA,GAAOxB,GACbyB,QAAMD,EAAAA,EAAAA,GAAA,GAAOxB,KA0Ef,MAAO,CACL0B,aAjBAC,IAEA,MAAM,KAAE1B,EAAI,MAAE2B,GAAUD,EAAME,OAC9BR,GAAcS,IAASN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBM,GAAS,IACZP,QAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDM,EAAUP,QAAM,IACnB,CAACtB,GAAO2B,IAEVH,QAAMD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDM,EAAUL,QAAM,IACnB,CAACxB,GAAO,QAET,EAKH8B,aAlEmBC,UACnBL,EAAMM,iBACN,MAAMV,EAASH,EAAUG,OACnBE,EAASR,EAASM,GACxBF,GAAcS,IAASN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWM,GAAS,IAAEL,aAE7C,IACE,GAAIS,OAAOX,OAAOE,GAAQU,OAAOC,GAAoB,KAAVA,IAAe,CAExD,MAAMC,GAAmBC,EAAAA,EAAAA,IAAW3C,EAAI,uBAClC4C,EAAAA,EAAAA,IAAOF,GAAgBb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACxBD,GAAM,IACTiB,WAAWC,EAAAA,EAAAA,SAIbpB,EAAa,CACXE,QAAMC,EAAAA,EAAAA,GAAA,GAAOxB,GACbyB,QAAMD,EAAAA,EAAAA,GAAA,GAAOxB,KAxBnB0C,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,WA6BRC,YAAW,KACTC,EAAAA,EAAsB,QAAE,CACtBC,QAAS,0BACTC,YAAa,qDACbC,SAAU,GACV,GACD,KAGHJ,YAAW,KACT5B,EAAQiC,KAAK,IAAI,GAChB,KACL,CACF,CAAE,MAAOf,GACPgB,QAAQhB,MAAM,sBAAuBA,GACrCW,EAAAA,EAAoB,MAAE,CACpBC,QAAS,QACTC,YAAa,0DAEjB,GAuBA1B,OAAQH,EAAUG,OAClBE,OAAQL,EAAUK,OACnB,ECpFH,EA1CkBF,IAChB,IAAIE,EAAyB,CAAC,EAsC9B,OApCKF,EAAOtB,OACVwB,EAAOxB,KAAO,oBAGXsB,EAAOlB,SACVoB,EAAOpB,OAAS,sBAGbkB,EAAOpB,KAEDkD,MAAMC,OAAO/B,EAAOpB,OAASmD,OAAO/B,EAAOpB,KAAO,KAC3DsB,EAAOtB,IAAM,4BAFbsB,EAAOtB,IAAM,kBAKVoB,EAAOrB,MAEA,eAAeqD,KAAKhC,EAAOrB,SACrCuB,EAAOvB,MAAQ,4BAFfuB,EAAOvB,MAAQ,4BAKZqB,EAAOV,cAEA,WAAW0C,KAAKhC,EAAOV,iBACjCY,EAAOZ,cAAgB,wCAFvBY,EAAOZ,cAAgB,6BAKrBU,EAAOT,iBAAmB,WAAWyC,KAAKhC,EAAOT,kBACnDW,EAAOX,eAAiB,wCAGrBS,EAAOX,QAEA,UAAU2C,KAAKhC,EAAOX,WAChCa,EAAOb,QAAU,yCAFjBa,EAAOb,QAAU,uBAKZa,CAAM,E,uCCvCR,MAAM+B,GAAUC,EAAAA,EAAAA,IAAO,IAAPA,CAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAIrBC,GAAYH,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sDAKzBG,GAAcL,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uD,aCFxC,MAWA,GAAeK,EAAAA,EAAAA,IAAf,EAXcC,IAAmC,IAAlC,MAAEC,EAAK,QAAEC,EAAO,EAAEC,GAAUH,EACzC,OACEI,EAAAA,EAAAA,MAACT,EAAS,CAAAU,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAKF,EAAEF,MACPK,EAAAA,EAAAA,KAACT,EAAW,CAAAQ,UACVC,EAAAA,EAAAA,KAACf,EAAO,CAAAc,SAAEF,EAAED,SAEJ,I,QCdT,MAAMP,GAAYH,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0EAMzBa,GAAcf,EAAAA,EAAAA,IAAO,QAAPA,CAAeI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kC,WCNXF,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAOdF,EAAAA,EAAAA,IAAO,WAAPA,CAAkBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAPzC,MAaMc,GAAQhB,EAAAA,EAAAA,IAAO,QAAPA,CAAeM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qFCEpC,GAAeK,EAAAA,EAAAA,IAAf,EAZcC,IAAA,IAAC,KAAEhE,EAAI,YAAEyE,EAAW,SAAEC,EAAQ,EAAEP,GAAeH,EAAA,OAC3DI,EAAAA,EAAAA,MAACT,EAAS,CAAAU,SAAA,EACRC,EAAAA,EAAAA,KAACE,EAAK,CAACG,QAAS3E,EAAKqE,SAAEF,EAAEM,MACzBH,EAAAA,EAAAA,KAACC,EAAW,CACVE,YAAaN,EAAEM,GACfzE,KAAMA,EACN4E,GAAI5E,EACJ0E,SAAUA,MAEF,I,oBCXP,MAAMG,GAAoBrB,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+LAWjCoB,GAAoBtB,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0LAWjCqB,GAAavB,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sNAc1BsB,GAAYxB,EAAAA,EAAAA,IAAO,OAAPA,CAAcyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,mQAiB1BwB,IAAO1B,EAAAA,EAAAA,IAAO,OAAPA,CAAc2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,4HAQrB0B,IAAkB5B,EAAAA,EAAAA,IAAO,MAAPA,CAAa6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,+MAc/Bc,IAAQhB,EAAAA,EAAAA,IAAO,QAAPA,CAAe8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,kIASvB6B,IAAe/B,EAAAA,EAAAA,IAAOgC,EAAAA,QAAPhC,CAAciC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,qTC5EpC,OAAEgC,IAAWF,EAAAA,QAgQnB,IAAezB,EAAAA,EAAAA,IAAf,EA9PqBC,IAAmD,IAAlD,MAAEC,EAAK,QAAEC,EAAO,GAAEU,EAAE,EAAET,GAAsBH,EAChE,MAAM,OAAE1C,EAAM,OAAEE,EAAQC,aAAckE,EAAoB,aAAE7D,GAAiBf,EAAQC,GAE/ES,EAAgBmE,IACpBD,EAAqBC,EAAyC,EAG1DC,EAAiBC,IAAoC,IAAnC,KAAEC,GAA2BD,EACnD,MAAME,EAAexE,EAAOuE,GAC5B,OAAOzB,EAAAA,EAAAA,KAACY,GAAI,CAAAb,SAAE2B,GAAoB,EAmB9BC,EAAiBC,GACR,IAATA,EAAmB,KACV,IAATA,EAAmB,KACV,IAATA,EAAmB,KAChB,KAqBT,OACE5B,EAAAA,EAAAA,KAACO,EAAiB,CAACD,GAAIA,EAAGP,UACxBD,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACC,QAAQ,gBAAgBC,MAAM,MAAKhC,SAAA,EACtCC,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGrC,UAClCC,EAAAA,EAAAA,KAACQ,EAAiB,CAAAT,UAChBC,EAAAA,EAAAA,KAACS,EAAU,CAAAV,UACTC,EAAAA,EAAAA,KAACqC,EAAAA,GAAK,CAACC,UAAU,OAAOC,aAAW,EAAAxC,UACjCC,EAAAA,EAAAA,KAACwC,EAAK,CAAC7C,MAAOA,EAAOC,QAASA,aAKtCI,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGrC,UAClCC,EAAAA,EAAAA,KAACqC,EAAAA,GAAK,CAACC,UAAU,QAAQC,aAAW,EAAAxC,UAClCD,EAAAA,EAAAA,MAACY,EAAS,CAAC+B,aAAa,MAAMC,SAAUlF,EAAauC,SAAA,EACnDD,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,OACL/F,KAAK,OACLyE,YAAY,YACZ9C,MAAOL,EAAOtB,MAAQ,GACtB0E,SAAUjD,KAEZ6C,EAAAA,EAAAA,KAACuB,EAAc,CAACE,KAAK,aAGvB3B,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAACE,GAAK,CAAAH,SAAC,YACPD,EAAAA,EAAAA,MAACmB,GAAY,CACXd,YAAY,gBACZC,SAAW/C,GAAUF,EAAa,CAAEG,OAAQ,CAAE5B,KAAM,SAAU2B,WAAU0C,SAAA,EAExEC,EAAAA,EAAAA,KAACoB,GAAM,CAAC/D,MAAM,OAAM0C,SAAC,UACrBC,EAAAA,EAAAA,KAACoB,GAAM,CAAC/D,MAAM,SAAQ0C,SAAC,eAEzBC,EAAAA,EAAAA,KAACuB,EAAc,CAACE,KAAK,eAGvB3B,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACgB,OAAQ,GAAG9C,SAAA,EACdD,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,SACL/F,KAAK,MACLyE,YAAY,MACZ9C,MAAOL,EAAOpB,KAAO,GACrBwE,SAAUjD,KAEZ6C,EAAAA,EAAAA,KAACuB,EAAc,CAACE,KAAK,YAEvB3B,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAACE,GAAK,CAAAH,SAAC,qBACPC,EAAAA,EAAAA,KAACiB,GAAY,CACXd,YAAY,kBACZC,SAAW/C,GAAUF,EAAa,CAAEG,OAAQ,CAAE5B,KAAM,WAAY2B,WAChEA,MAAOL,EAAOnB,eAAYiH,EAAU/C,SA/F9B,CACtB,cACA,mBACA,KACA,KACA,QACA,MACA,UA0FiCgD,KAAKC,IACpBhD,EAAAA,EAAAA,KAACoB,GAAM,CAAa/D,MAAO2F,EAAMjD,SAAEiD,GAAtBA,cAMrBhD,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,OACL/F,KAAK,UACLyE,YAAY,UACZ9C,MAAOL,EAAOjB,SAAW,GACzBqE,SAAUjD,OAId6C,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,OACL/F,KAAK,cACLyE,YAAY,cACZ9C,MAAOL,EAAOhB,aAAe,GAC7BoE,SAAUjD,MAIbH,EAAOnB,WAlHUA,EAkHuBmB,EAAOnB,SAjHnD,CAAC,KAAM,KAAM,QAAS,MAAO,UAAUoH,SAASpH,MAkH3CiE,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACgB,OAAQ,GAAG9C,SAAA,EACdD,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAACE,GAAK,CAAAH,SAAC,mBACPC,EAAAA,EAAAA,KAACiB,GAAY,CACXd,YAAY,gBACZC,SAAW/C,GAAUF,EAAa,CAAEG,OAAQ,CAAE5B,KAAM,cAAe2B,WACnEA,MAAOL,EAAOf,kBAAe6G,EAAU/C,SArHhC,CAAC,EAAG,EAAG,EAAG,EAAG,GAuHAgD,KAAKnB,IACvB5B,EAAAA,EAAAA,KAACoB,GAAM,CAAY/D,MAAOuE,EAAK7B,SAAA,GAAAmD,OAAKtB,GAAIsB,OAAGvB,EAAcC,GAAK,UAAjDA,WAInB5B,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,OACL/F,KAAK,mBACLyE,YAAY,qBACZ9C,MAAOL,EAAOd,kBAAoB,GAClCkE,SAAUjD,UAMlB2C,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACgB,OAAQ,GAAG9C,SAAA,EACdD,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAACE,GAAK,CAAAH,SAAC,cACPC,EAAAA,EAAAA,KAACiB,GAAY,CACXd,YAAY,kBACZC,SAAW/C,GAAUF,EAAa,CAAEG,OAAQ,CAAE5B,KAAM,WAAY2B,WAChEA,MAAOL,EAAOb,eAAY2G,EAAU/C,SArI9B,CACtB,YACA,YACA,SACA,SACA,YACA,SACA,WACA,YACA,aACA,WACA,iBACA,qBACA,WACA,UACA,UAwHiCgD,KAAK5G,IACpB6D,EAAAA,EAAAA,KAACoB,GAAM,CAAgB/D,MAAOlB,EAAS4D,SAAE5D,GAA5BA,QAGjB6D,EAAAA,EAAAA,KAACuB,EAAc,CAACE,KAAK,iBAEvBzB,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,OACL/F,KAAK,YACLyE,YAAY,aACZ9C,MAAOL,EAAOZ,WAAa,GAC3BgE,SAAUjD,UAKhB6C,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,OACL/F,KAAK,UACLyE,YAAY,WACZ9C,MAAOL,EAAOX,SAAW,GACzB+D,SAAUjD,OAId2C,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACgB,OAAQ,GAAG9C,SAAA,EACdC,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,MACL/F,KAAK,gBACLyE,YAAY,iBACZ9C,MAAOL,EAAOV,eAAiB,GAC/B8D,SAAUjD,OAGd2C,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAACE,GAAK,CAAAH,SAAC,mCACPD,EAAAA,EAAAA,MAACmB,GAAY,CACXd,YAAY,gBACZC,SAAW/C,GAAUF,EAAa,CAAEG,OAAQ,CAAE5B,KAAM,sBAAuB2B,WAC3EA,MAAOL,EAAOR,0BAAuBsG,EAAU/C,SAAA,EAE/CC,EAAAA,EAAAA,KAACoB,GAAM,CAAC/D,MAAM,KAAI0C,SAAC,QACnBC,EAAAA,EAAAA,KAACoB,GAAM,CAAC/D,MAAM,MAAK0C,SAAC,iBAKM,QAA/B/C,EAAOR,sBACNwD,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,UACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,MACL/F,KAAK,iBACLyE,YAAY,kBACZ9C,MAAOL,EAAOT,gBAAkB,GAChC6D,SAAUjD,OAKhB2C,EAAAA,EAAAA,MAACkC,EAAAA,EAAG,CAACW,KAAM,GAAG5C,SAAA,EACZC,EAAAA,EAAAA,KAAC4C,EAAK,CACJnB,KAAK,QACL/F,KAAK,QACLyE,YAAY,gBACZ9C,MAAOL,EAAOrB,OAAS,GACvByE,SAAUjD,KAEZ6C,EAAAA,EAAAA,KAACuB,EAAc,CAACE,KAAK,cAGvBzB,EAAAA,EAAAA,KAACc,GAAe,CAAAf,UACdC,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,CAACzH,KAAK,SAAQqE,SAAEF,EAAE,4BA9NThE,KAoOR,G","sources":["config/firebase.js","common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","components/RegisterForm/styles.ts","components/RegisterForm/index.tsx"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst storage = getStorage(app);\n\nexport { app, analytics, db, auth, storage }; ","import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport { db } from \"../../config/firebase\";\r\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface IValues {\r\n  name?: string;\r\n  email?: string;\r\n  age?: string;\r\n  standard?: string;\r\n  gender?: string;\r\n  subject?: string;\r\n  institution?: string;\r\n  yearOfStudy?: string;\r\n  yearOfCompletion?: string;\r\n  district?: string;\r\n  localBody?: string;\r\n  pinCode?: string;\r\n  contactNumber?: string;\r\n  whatsappNumber?: string;\r\n  isDifferentWhatsApp?: string;\r\n}\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  standard: \"\",\r\n  gender: \"\",\r\n  subject: \"\",\r\n  institution: \"\",\r\n  yearOfStudy: \"\",\r\n  yearOfCompletion: \"\",\r\n  district: \"\",\r\n  localBody: \"\",\r\n  pinCode: \"\",\r\n  contactNumber: \"\",\r\n  whatsappNumber: \"\",\r\n  isDifferentWhatsApp: 'no',\r\n};\r\n\r\nexport const useForm = (validate: { (values: IValues): IValues }) => {\r\n  const history = useHistory();\r\n  const [formState, setFormState] = useState<{\r\n    values: IValues;\r\n    errors: IValues;\r\n  }>({\r\n    values: { ...initialValues },\r\n    errors: { ...initialValues },\r\n  });\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add registration data to Firestore\r\n        const registrationsRef = collection(db, 'registrations');\r\n        await addDoc(registrationsRef, {\r\n          ...values,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: { ...initialValues },\r\n          errors: { ...initialValues },\r\n        });\r\n\r\n        // Scroll to top first\r\n        scrollToTop();\r\n\r\n        // Show success notification after scrolling\r\n        setTimeout(() => {\r\n          notification[\"success\"]({\r\n            message: \"Registration Successful\",\r\n            description: \"Thank you for registering! We'll contact you soon.\",\r\n            duration: 3,\r\n          });\r\n        }, 500);\r\n\r\n        // Redirect to home page after notification\r\n        setTimeout(() => {\r\n          history.push('/');\r\n        }, 2500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit registration. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: string } }\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n","import { RegisterValues } from \"../../components/RegisterForm/types\";\r\n\r\nconst validate = (values: RegisterValues): RegisterValues => {\r\n  let errors: RegisterValues = {};\r\n  \r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n\r\n  if (!values.gender) {\r\n    errors.gender = \"Gender is required\";\r\n  }\r\n\r\n  if (!values.age) {\r\n    errors.age = \"Age is required\";\r\n  } else if (isNaN(Number(values.age)) || Number(values.age) < 0) {\r\n    errors.age = \"Please enter a valid age\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  } else if (!/^\\d{10}$/.test(values.contactNumber)) {\r\n    errors.contactNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (values.whatsappNumber && !/^\\d{10}$/.test(values.whatsappNumber)) {\r\n    errors.whatsappNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (!values.pinCode) {\r\n    errors.pinCode = \"PIN code is required\";\r\n  } else if (!/^\\d{6}$/.test(values.pinCode)) {\r\n    errors.pinCode = \"Please enter a valid 6-digit PIN code\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(placeholder)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import styled from \"styled-components\";\nimport { Select } from \"antd\";\n\nexport const RegisterContainer = styled(\"div\")`\n  padding: 7rem 0 5rem;\n  margin-top: 60px;\n  display: flex;\n  min-height: calc(100vh - 60px);\n\n  @media only screen and (max-width: 1024px) {\n    padding: 5rem 0 3rem;\n  }\n`;\n\nexport const LeftColumnWrapper = styled(\"div\")`\n  height: calc(100vh - 120px);\n  position: relative;\n  padding-right: 2rem;\n\n  @media only screen and (max-width: 1024px) {\n    height: auto;\n    padding-right: 0;\n  }\n`;\n\nexport const LeftColumn = styled(\"div\")`\n  position: sticky;\n  top: 40%;\n  width: 100%;\n  max-width: 600px;\n  background: white;\n\n  @media only screen and (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    width: 100%;\n  }\n`;\n\nexport const FormGroup = styled(\"form\")`\n  width: 100%;\n  max-width: 600px;\n  overflow-y: auto;\n  margin-left: auto;\n\n  @media only screen and (max-width: 1045px) {\n    max-width: 100%;\n    margin-top: 2rem;\n    padding-left: 0;\n  }\n\n  .ant-col {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Span = styled(\"span\")`\n  display: block;\n  font-weight: 600;\n  color: rgb(255, 130, 92);\n  height: 0.775rem;\n  padding: 0 0.675rem;\n`;\n\nexport const ButtonContainer = styled(\"div\")`\n  text-align: center;\n  position: relative;\n  margin-top: 2rem;\n\n  button {\n    border: 2px solid white;\n  }\n\n  @media only screen and (max-width: 414px) {\n    padding-top: 0.75rem;\n  }\n`;\n\nexport const Label = styled(\"label\")`\n  display: block;\n  margin-bottom: 6px;\n  margin-top: 15px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n`;\n\nexport const StyledSelect = styled(Select)`\n  width: 100%;\n  margin-top: 5px;\n  \n  .ant-select-selector {\n    border: 1px solid #dadada !important;\n    border-radius: 4px !important;\n    padding: 8px 12px !important;\n    height: auto !important;\n    \n    &:hover, &:focus {\n      border-color: rgb(0, 0, 0) !important;\n    }\n  }\n`; ","import { Row, Col, Select } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Slide } from \"react-awesome-reveal\";\nimport { RegisterFormProps, ValidationTypeProps } from \"./types\";\nimport { useForm } from \"../../common/utils/useForm\";\nimport validate from \"../../common/utils/validationRules\";\nimport { Button } from \"../../common/Button\";\nimport Block from \"../Block\";\nimport Input from \"../../common/Input\";\nimport { RegisterContainer, FormGroup, Span, ButtonContainer, LeftColumn, LeftColumnWrapper, Label, StyledSelect } from \"./styles\";\n\nconst { Option } = Select;\n\nconst RegisterForm = ({ title, content, id, t }: RegisterFormProps) => {\n  const { values, errors, handleChange: originalHandleChange, handleSubmit } = useForm(validate);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: any } }) => {\n    originalHandleChange(e as React.ChangeEvent<HTMLInputElement>);\n  };\n\n  const ValidationType = ({ type }: ValidationTypeProps) => {\n    const ErrorMessage = errors[type as keyof typeof errors];\n    return <Span>{ErrorMessage}</Span>;\n  };\n\n  const educationLevels = [\n    \"High School\",\n    \"Higher Secondary\",\n    \"UG\",\n    \"PG\",\n    \"MPhil\",\n    \"PhD\",\n    \"Others\"\n  ];\n\n  const shouldShowYearFields = (standard: string) => {\n    return [\"UG\", \"PG\", \"MPhil\", \"PhD\", \"Others\"].includes(standard);\n  };\n\n  const yearOfStudyOptions = [1, 2, 3, 4, 5];\n\n  const getYearSuffix = (year: number) => {\n    if (year === 1) return \"st\";\n    if (year === 2) return \"nd\";\n    if (year === 3) return \"rd\";\n    return \"th\";\n  };\n\n  const keralaDistricts = [\n    \"Alappuzha\",\n    \"Ernakulam\",\n    \"Idukki\",\n    \"Kannur\",\n    \"Kasaragod\",\n    \"Kollam\",\n    \"Kottayam\",\n    \"Kozhikode\",\n    \"Malappuram\",\n    \"Palakkad\",\n    \"Pathanamthitta\",\n    \"Thiruvananthapuram\",\n    \"Thrissur\",\n    \"Wayanad\",\n    \"Others\"\n  ];\n\n  return (\n    <RegisterContainer id={id}>\n      <Row justify=\"space-between\" align=\"top\">\n        <Col lg={12} md={11} sm={24} xs={24}>\n          <LeftColumnWrapper>\n            <LeftColumn>\n              <Slide direction=\"left\" triggerOnce>\n                <Block title={title} content={content} />\n              </Slide>\n            </LeftColumn>\n          </LeftColumnWrapper>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Slide direction=\"right\" triggerOnce>\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Full Name\"\n                  value={values.name || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"name\" />\n              </Col>\n              \n              <Col span={24}>\n                <Label>Gender</Label>\n                <StyledSelect\n                  placeholder=\"Select Gender\"\n                  onChange={(value) => handleChange({ target: { name: 'gender', value }})}\n                >\n                  <Option value=\"male\">Male</Option>\n                  <Option value=\"female\">Female</Option>\n                </StyledSelect>\n                <ValidationType type=\"gender\" />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"number\"\n                    name=\"age\"\n                    placeholder=\"Age\"\n                    value={values.age || \"\"}\n                    onChange={handleChange}\n                  />\n                  <ValidationType type=\"age\" />\n                </Col>\n                <Col span={12}>\n                  <Label>Standard/Course</Label>\n                  <StyledSelect\n                    placeholder=\"Standard/Course\"\n                    onChange={(value) => handleChange({ target: { name: 'standard', value }})}\n                    value={values.standard || undefined}\n                  >\n                    {educationLevels.map((level) => (\n                      <Option key={level} value={level}>{level}</Option>\n                    ))}\n                  </StyledSelect>\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"subject\"\n                  placeholder=\"Subject\"\n                  value={values.subject || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"institution\"\n                  placeholder=\"Institution\"\n                  value={values.institution || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              {values.standard && shouldShowYearFields(values.standard) && (\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <Label>Year of Study</Label>\n                    <StyledSelect\n                      placeholder=\"Year of Study\"\n                      onChange={(value) => handleChange({ target: { name: 'yearOfStudy', value }})}\n                      value={values.yearOfStudy || undefined}\n                    >\n                      {yearOfStudyOptions.map((year) => (\n                        <Option key={year} value={year}>{`${year}${getYearSuffix(year)} Year`}</Option>\n                      ))}\n                    </StyledSelect>\n                  </Col>\n                  <Col span={12}>\n                    <Input\n                      type=\"text\"\n                      name=\"yearOfCompletion\"\n                      placeholder=\"Year of Completion\"\n                      value={values.yearOfCompletion || \"\"}\n                      onChange={handleChange}\n                    />\n                  </Col>\n                </Row>\n              )}\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Label>District</Label>\n                  <StyledSelect\n                    placeholder=\"Select District\"\n                    onChange={(value) => handleChange({ target: { name: 'district', value }})}\n                    value={values.district || undefined}\n                  >\n                    {keralaDistricts.map((district) => (\n                      <Option key={district} value={district}>{district}</Option>\n                    ))}\n                  </StyledSelect>\n                  <ValidationType type=\"district\" />\n                </Col>\n                <Col span={12}>\n                  <Input\n                    type=\"text\"\n                    name=\"localBody\"\n                    placeholder=\"Local Body\"\n                    value={values.localBody || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"pinCode\"\n                  placeholder=\"Pin Code\"\n                  value={values.pinCode || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"tel\"\n                    name=\"contactNumber\"\n                    placeholder=\"Contact Number\"\n                    value={values.contactNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Label>Is WhatsApp number different?</Label>\n                  <StyledSelect\n                    placeholder=\"Select Yes/No\"\n                    onChange={(value) => handleChange({ target: { name: 'isDifferentWhatsApp', value }})}\n                    value={values.isDifferentWhatsApp || undefined}\n                  >\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"yes\">Yes</Option>\n                  </StyledSelect>\n                </Col>\n              </Row>\n\n              {values.isDifferentWhatsApp === 'yes' && (\n                <Col span={24}>\n                  <Input\n                    type=\"tel\"\n                    name=\"whatsappNumber\"\n                    placeholder=\"WhatsApp Number\"\n                    value={values.whatsappNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n              )}\n\n              <Col span={24}>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n                  value={values.email || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"email\" />\n              </Col>\n\n              <ButtonContainer>\n                <Button name=\"submit\">{t(\"Register\")}</Button>\n              </ButtonContainer>\n            </FormGroup>\n          </Slide>\n        </Col>\n      </Row>\n    </RegisterContainer>\n  );\n};\n\nexport default withTranslation()(RegisterForm); "],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","getAuth","getStorage","initialValues","name","email","age","standard","gender","subject","institution","yearOfStudy","yearOfCompletion","district","localBody","pinCode","contactNumber","whatsappNumber","isDifferentWhatsApp","useForm","validate","history","useHistory","formState","setFormState","useState","values","_objectSpread","errors","handleChange","event","value","target","prevState","handleSubmit","async","preventDefault","Object","every","error","registrationsRef","collection","addDoc","timestamp","serverTimestamp","window","scrollTo","top","behavior","setTimeout","notification","message","description","duration","push","console","isNaN","Number","test","Content","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","TextWrapper","_templateObject3","withTranslation","_ref","title","content","t","_jsxs","children","_jsx","StyledInput","Label","placeholder","onChange","htmlFor","id","RegisterContainer","LeftColumnWrapper","LeftColumn","FormGroup","_templateObject4","Span","_templateObject5","ButtonContainer","_templateObject6","_templateObject7","StyledSelect","Select","_templateObject8","Option","originalHandleChange","e","ValidationType","_ref2","type","ErrorMessage","getYearSuffix","year","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","gutter","undefined","map","level","includes","concat","Button"],"sourceRoot":""}