{"version":3,"file":"static/js/475.69dd8fb5.chunk.js","mappings":"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","sources":["utils/csvExport.ts","pages/Admin/index.tsx"],"sourcesContent":["const convertToCSV = (data: any[], columns: any[]) => {\n  const header = columns.map(col => col.title).join(',');\n  const rows = data.map(item => \n    columns.map(col => {\n      const value = item[col.dataIndex];\n      // Handle values that might contain commas\n      return value ? `\"${value}\"` : '';\n    }).join(',')\n  );\n  \n  return [header, ...rows].join('\\n');\n};\n\nexport const downloadCSV = (data: any[], columns: any[], filename: string) => {\n  const csv = convertToCSV(data, columns);\n  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n  \n  if ((navigator as any).msSaveBlob) {\n    // IE 10+\n    (navigator as any).msSaveBlob(blob, filename);\n  } else {\n    link.href = URL.createObjectURL(blob);\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}; ","import { useState, useEffect } from 'react';\nimport { Table, Tabs, message, Button } from 'antd';\nimport { collection, query, getDocs, orderBy } from 'firebase/firestore';\nimport { db } from '../../config/firebase';\nimport Container from '../../common/Container';\nimport styled from 'styled-components';\nimport { downloadCSV } from '../../utils/csvExport';\n\nconst { TabPane } = Tabs;\n\nconst AdminContainer = styled(Container)`\n  padding-top: 100px;\n  min-height: calc(100vh - 100px);\n`;\n\nconst TableContainer = styled.div`\n  background: white;\n  padding: 24px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\ninterface Registration {\n  id: string;\n  name: string;\n  email: string;\n  contactNumber: string;\n  district: string;\n  institution: string;\n  timestamp: string;\n  [key: string]: any;\n}\n\ninterface Contact {\n  id: string;\n  name: string;\n  contactNumber: string;\n  timestamp: string;\n  [key: string]: any;\n}\n\nconst Admin = () => {\n  const [registrations, setRegistrations] = useState<Registration[]>([]);\n  const [contacts, setContacts] = useState<Contact[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeKey, setActiveKey] = useState(\"1\");\n\n  const fetchData = async () => {\n    try {\n      // Fetch registrations\n      const registrationsQuery = query(\n        collection(db, 'registrations'),\n        orderBy('timestamp', 'desc')\n      );\n      const registrationsSnapshot = await getDocs(registrationsQuery);\n      const registrationsData = registrationsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate().toLocaleString() || 'N/A'\n      })) as Registration[];\n\n      // Fetch contacts\n      const contactsQuery = query(\n        collection(db, 'contacts'),\n        orderBy('timestamp', 'desc')\n      );\n      const contactsSnapshot = await getDocs(contactsQuery);\n      const contactsData = contactsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate().toLocaleString() || 'N/A'\n      })) as Contact[];\n\n      setRegistrations(registrationsData);\n      setContacts(contactsData);\n    } catch (error) {\n      message.error('Failed to fetch data');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const registrationColumns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'Email', dataIndex: 'email', key: 'email' },\n    { title: 'Contact', dataIndex: 'contactNumber', key: 'contactNumber' },\n    { title: 'District', dataIndex: 'district', key: 'district' },\n    { title: 'Institution', dataIndex: 'institution', key: 'institution' },\n    { title: 'Timestamp', dataIndex: 'timestamp', key: 'timestamp' },\n  ];\n\n  const contactColumns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'Contact Number', dataIndex: 'contactNumber', key: 'contactNumber' },\n    { title: 'Timestamp', dataIndex: 'timestamp', key: 'timestamp' },\n  ];\n\n  return (\n    <AdminContainer>\n      <h1>Admin Dashboard</h1>\n      <TableContainer>\n        <Tabs \n          defaultActiveKey=\"1\"\n          activeKey={activeKey}\n          onChange={setActiveKey}\n          tabBarExtraContent={{\n            right: (\n              <>\n                {activeKey === \"1\" && (\n                  <Button onClick={() => downloadCSV(registrations, registrationColumns, 'registrations.csv')}>\n                    Download CSV\n                  </Button>\n                )}\n                {activeKey === \"2\" && (\n                  <Button onClick={() => downloadCSV(contacts, contactColumns, 'contacts.csv')}>\n                    Download CSV\n                  </Button>\n                )}\n              </>\n            )\n          }}\n        >\n          <TabPane tab=\"Registrations\" key=\"1\">\n            <Table dataSource={registrations} columns={registrationColumns} loading={loading} rowKey=\"id\" scroll={{ x: true }} />\n          </TabPane>\n          <TabPane tab=\"Contacts\" key=\"2\">\n            <Table dataSource={contacts} columns={contactColumns} loading={loading} rowKey=\"id\" scroll={{ x: true }} />\n          </TabPane>\n        </Tabs>\n      </TableContainer>\n    </AdminContainer>\n  );\n};\n\nexport default Admin; "],"names":["downloadCSV","data","columns","filename","csv","convertToCSV","map","col","title","join","item","value","dataIndex","blob","Blob","type","link","document","createElement","navigator","msSaveBlob","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","TabPane","Tabs","AdminContainer","styled","Container","TableContainer","div","Admin","registrations","setRegistrations","useState","contacts","setContacts","loading","setLoading","activeKey","setActiveKey","useEffect","async","registrationsQuery","query","collection","db","orderBy","registrationsData","getDocs","docs","doc","_doc$data$timestamp","id","timestamp","toDate","toLocaleString","contactsQuery","contactsData","_doc$data$timestamp2","error","message","console","fetchData","registrationColumns","key","contactColumns","_jsxs","children","_jsx","defaultActiveKey","onChange","tabBarExtraContent","right","_Fragment","Button","onClick","tab","Table","dataSource","rowKey","scroll","x"],"sourceRoot":""}