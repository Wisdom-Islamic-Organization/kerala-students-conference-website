{"version":3,"file":"static/js/475.3911a7d0.chunk.js","mappings":"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","sources":["utils/csvExport.ts","pages/Admin/index.tsx"],"sourcesContent":["const convertToCSV = (data: any[], columns: any[]) => {\n  const header = columns.map(col => col.title).join(',');\n  const rows = data.map(item => \n    columns.map(col => {\n      const value = item[col.dataIndex];\n      // Handle values that might contain commas\n      return value ? `\"${value}\"` : '';\n    }).join(',')\n  );\n  \n  return [header, ...rows].join('\\n');\n};\n\nexport const downloadCSV = (data: any[], columns: any[], filename: string) => {\n  const csv = convertToCSV(data, columns);\n  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n  \n  if ((navigator as any).msSaveBlob) {\n    // IE 10+\n    (navigator as any).msSaveBlob(blob, filename);\n  } else {\n    link.href = URL.createObjectURL(blob);\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}; ","import { Button, Form, Input, Modal, Select, Table, Tabs, message } from 'antd';\nimport { addDoc, collection, deleteDoc, doc, getDocs, orderBy, query, serverTimestamp } from 'firebase/firestore';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Container from '../../common/Container';\nimport { db } from '../../config/firebase';\nimport { News } from '../../types/news';\nimport { downloadCSV } from '../../utils/csvExport';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst AdminContainer = styled(Container)`\n  padding-top: 100px;\n  min-height: calc(100vh - 100px);\n`;\n\nconst TableContainer = styled.div`\n  background: white;\n  padding: 24px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\ninterface Registration {\n  id: string;\n  name: string;\n  email: string;\n  contactNumber: string;\n  district: string;\n  institution: string;\n  timestamp: string;\n  [key: string]: any;\n}\n\ninterface Contact {\n  id: string;\n  name: string;\n  contactNumber: string;\n  timestamp: string;\n  [key: string]: any;\n}\n\nconst Admin = () => {\n  const [registrations, setRegistrations] = useState<Registration[]>([]);\n  const [contacts, setContacts] = useState<Contact[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeKey, setActiveKey] = useState(\"1\");\n  const [newsModalVisible, setNewsModalVisible] = useState(false);\n  const [newsForm] = Form.useForm();\n  const [news, setNews] = useState<News[]>([]);\n\n  const fetchData = async () => {\n    try {\n      // Fetch registrations\n      const registrationsQuery = query(\n        collection(db, 'registrations'),\n        orderBy('timestamp', 'desc')\n      );\n      const registrationsSnapshot = await getDocs(registrationsQuery);\n      const registrationsData = registrationsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate().toLocaleString() || 'N/A'\n      })) as Registration[];\n\n      // Fetch contacts\n      const contactsQuery = query(\n        collection(db, 'contacts'),\n        orderBy('timestamp', 'desc')\n      );\n      const contactsSnapshot = await getDocs(contactsQuery);\n      const contactsData = contactsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate().toLocaleString() || 'N/A'\n      })) as Contact[];\n\n      setRegistrations(registrationsData);\n      setContacts(contactsData);\n    } catch (error) {\n      message.error('Failed to fetch data');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchNews = async () => {\n    try {\n      const newsQuery = query(\n        collection(db, 'news'),\n        orderBy('timestamp', 'desc')\n      );\n      const snapshot = await getDocs(newsQuery);\n      const newsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate().toLocaleString() || 'N/A'\n      })) as News[];\n      setNews(newsData);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      message.error('Failed to fetch news');\n    }\n  };\n\n  const handleAddNews = async (values: any) => {\n    try {\n      await addDoc(collection(db, 'news'), {\n        ...values,\n        timestamp: serverTimestamp()\n      });\n\n      message.success('News added successfully');\n      setNewsModalVisible(false);\n      newsForm.resetFields();\n      fetchNews();\n    } catch (error) {\n      console.error('Error adding news:', error);\n      message.error('Failed to add news');\n    }\n  };\n\n  const handleDeleteNews = async (id: string) => {\n    try {\n      await deleteDoc(doc(db, 'news', id));\n      message.success('News deleted successfully');\n      fetchNews();\n    } catch (error) {\n      console.error('Error deleting news:', error);\n      message.error('Failed to delete news');\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchNews();\n  }, []);\n\n  const registrationColumns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'Email', dataIndex: 'email', key: 'email' },\n    { title: 'Contact', dataIndex: 'contactNumber', key: 'contactNumber' },\n    { title: 'District', dataIndex: 'district', key: 'district' },\n    { title: 'Institution', dataIndex: 'institution', key: 'institution' },\n    { title: 'Timestamp', dataIndex: 'timestamp', key: 'timestamp' },\n  ];\n\n  const contactColumns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'Contact Number', dataIndex: 'contactNumber', key: 'contactNumber' },\n    { title: 'Timestamp', dataIndex: 'timestamp', key: 'timestamp' },\n  ];\n\n  const newsColumns = [\n    { title: 'Title', dataIndex: 'title', key: 'title' },\n    { title: 'Type', dataIndex: 'type', key: 'type' },\n    { title: 'Timestamp', dataIndex: 'timestamp', key: 'timestamp' },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text: string, record: News) => (\n        <Button danger onClick={() => handleDeleteNews(record.id!)}>Delete</Button>\n      ),\n    },\n  ];\n\n  return (\n    <AdminContainer>\n      <h1>Admin Dashboard</h1>\n      <TableContainer>\n        <Tabs \n          defaultActiveKey=\"1\"\n          activeKey={activeKey}\n          onChange={setActiveKey}\n          tabBarExtraContent={{\n            right: (\n              <>\n                {activeKey === \"1\" && (\n                  <Button onClick={() => downloadCSV(registrations, registrationColumns, 'registrations.csv')}>\n                    Download CSV\n                  </Button>\n                )}\n                {activeKey === \"2\" && (\n                  <Button onClick={() => downloadCSV(contacts, contactColumns, 'contacts.csv')}>\n                    Download CSV\n                  </Button>\n                )}\n                {activeKey === \"3\" && (\n                  <Button type=\"primary\" onClick={() => setNewsModalVisible(true)}>\n                    Add News\n                  </Button>\n                )}\n              </>\n            )\n          }}\n        >\n          <TabPane tab=\"Registrations\" key=\"1\">\n            <Table dataSource={registrations} columns={registrationColumns} loading={loading} rowKey=\"id\" scroll={{ x: true }} />\n          </TabPane>\n          <TabPane tab=\"Contacts\" key=\"2\">\n            <Table dataSource={contacts} columns={contactColumns} loading={loading} rowKey=\"id\" scroll={{ x: true }} />\n          </TabPane>\n          <TabPane tab=\"News\" key=\"3\">\n            <Table dataSource={news} columns={newsColumns} loading={loading} rowKey=\"id\" />\n          </TabPane>\n        </Tabs>\n      </TableContainer>\n\n      <Modal\n        title=\"Add News\"\n        visible={newsModalVisible}\n        onCancel={() => setNewsModalVisible(false)}\n        footer={null}\n      >\n        <Form form={newsForm} onFinish={handleAddNews}>\n          <Form.Item name=\"type\" rules={[{ required: true }]}>\n            <Select placeholder=\"Select type\">\n              <Option value=\"youtube\">YouTube</Option>\n              <Option value=\"image\">Image</Option>\n              <Option value=\"facebook\">Facebook</Option>\n              <Option value=\"instagram\">Instagram</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item name=\"title\" rules={[{ required: true }]}>\n            <Input placeholder=\"Title\" />\n          </Form.Item>\n\n          <Form.Item name=\"description\" rules={[{ required: true }]}>\n            <Input.TextArea placeholder=\"Description\" />\n          </Form.Item>\n\n          <Form.Item name=\"url\" rules={[{ required: true }]}>\n            <Input placeholder=\"URL (e.g., YouTube embed link, image link, Facebook post, Instagram post)\" />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </AdminContainer>\n  );\n};\n\nexport default Admin; "],"names":["downloadCSV","data","columns","filename","csv","convertToCSV","map","col","title","join","item","value","dataIndex","blob","Blob","type","link","document","createElement","navigator","msSaveBlob","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","TabPane","Tabs","Option","Select","AdminContainer","styled","Container","TableContainer","div","Admin","registrations","setRegistrations","useState","contacts","setContacts","loading","setLoading","activeKey","setActiveKey","newsModalVisible","setNewsModalVisible","newsForm","Form","useForm","news","setNews","fetchNews","async","newsQuery","query","collection","db","orderBy","newsData","getDocs","docs","doc","_doc$data$timestamp3","id","timestamp","toDate","toLocaleString","error","console","message","useEffect","registrationsQuery","registrationsData","_doc$data$timestamp","contactsQuery","contactsData","_doc$data$timestamp2","fetchData","registrationColumns","key","contactColumns","newsColumns","render","text","record","_jsx","Button","danger","onClick","deleteDoc","success","handleDeleteNews","children","_jsxs","defaultActiveKey","onChange","tabBarExtraContent","right","_Fragment","tab","Table","dataSource","rowKey","scroll","x","Modal","visible","onCancel","footer","form","onFinish","addDoc","values","serverTimestamp","resetFields","Item","name","rules","required","placeholder","Input","TextArea","htmlType"],"sourceRoot":""}