{"version":3,"file":"static/js/669.c0407c9d.chunk.js","mappings":"iOAEaA,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oPAc1BC,EAAmBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yFAQ7BG,EAAkBN,EAAAA,GAAOO,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8HAU5BM,EAAUT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yJASpBQ,EAAiBX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wIAS3BU,EAAQb,EAAAA,GAAOc,GAAEC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,gSAgBjBa,EAAWhB,EAAAA,GAAOiB,EAACC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,4QAenBgB,EAAcnB,EAAAA,GAAOC,IAAGmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,8VAOvB,SAAAkB,GAAK,MAAoB,gBAAhBA,EAAMC,MAA0B,iBAAmB,MAAM,I,kBC3BhF,GAAeC,EAAAA,EAAAA,IAAf,EA/CkB,SAAHC,GAAwE,IAAlEC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAUC,EAAOH,EAAPG,QAASC,EAAgBJ,EAAhBI,iBAC7CC,GAAkDC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAY9C,OAVAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BH,GAAqB,SAACI,GAAS,OAC7BA,IAAcV,EAAiBW,OAAS,EAAI,EAAID,EAAY,CAAC,GAEjE,GAAG,KAEH,OAAO,kBAAME,cAAcJ,EAAU,CACvC,GAAG,CAACR,EAAiBW,UAGnBE,EAAAA,EAAAA,MAAC1C,EAAa,CAAA2C,SAAA,EACZC,EAAAA,EAAAA,KAACvC,EAAgB,CAAAsC,SACdd,EAAiBgB,KAAI,SAACC,EAAOC,GAAK,OACjCH,EAAAA,EAAAA,KAACrC,EAAe,CAEdyC,KAAKC,EAAAA,EAAAA,GAAaH,GAClBI,MAAO,CACLC,QAASJ,IAAUb,EAAoB,EAAI,EAC3CkB,WAAY,2BAJTL,EAML,OAGNH,EAAAA,EAAAA,KAAClC,EAAO,KACRgC,EAAAA,EAAAA,MAAC9B,EAAc,CAAA+B,SAAA,EACbC,EAAAA,EAAAA,KAAC9B,EAAK,CAAA6B,SAAEjB,IACPC,IAAYiB,EAAAA,EAAAA,KAAC3B,EAAQ,CAAA0B,SAAEhB,KACxBiB,EAAAA,EAAAA,KAACxB,EAAW,CAAAuB,SACTf,EAAQiB,KAAI,SAACQ,EAAQN,GAAK,OACzBH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAEL/B,MAAO8B,EAAO9B,MACdgC,QAAS,kBAAMC,OAAOC,SAASC,KAAOL,EAAOM,IAAI,EAAChB,SAEjDU,EAAO3B,OAJHqB,EAKE,WAMrB,G","sources":["components/HeroBlock/styles.ts","components/HeroBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeroContainer = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 0;\r\n  padding-top: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const BackgroundSlider = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const BackgroundImage = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  opacity: 0;\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); // Adjust opacity here\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 2;\r\n  text-align: center;\r\n  padding: 60px 20px 0;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ffffff;\r\n  font-size: 3.5rem;\r\n  margin-bottom: 1rem;\r\n  font-weight: 700;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.p`\r\n  color: #ffffff;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 2rem;\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  \r\n  button {\r\n    color: #fff;\r\n    border: ${props => props.color === 'transparent' ? '1px solid #fff' : 'none'};\r\n    \r\n    &:hover {\r\n      color: #fff;\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n  \r\n  @media screen and (max-width: 480px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    button {\r\n      width: 200px;\r\n    }\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Button } from \"../../common/Button\";\r\nimport {\r\n  HeroContainer,\r\n  BackgroundSlider,\r\n  BackgroundImage,\r\n  Overlay,\r\n  ContentWrapper,\r\n  Title,\r\n  Subtitle,\r\n  ButtonGroup\r\n} from \"./styles\";\r\nimport { HeroBlockProps } from \"./types\";\r\nimport { getAssetPath } from \"../../utils/paths\";\r\n\r\nconst HeroBlock = ({ title, subtitle, buttons, backgroundImages }: HeroBlockProps) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) => \r\n        prevIndex === backgroundImages.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 5000); // Change image every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [backgroundImages.length]);\r\n\r\n  return (\r\n    <HeroContainer>\r\n      <BackgroundSlider>\r\n        {backgroundImages.map((image, index) => (\r\n          <BackgroundImage \r\n            key={index}\r\n            src={getAssetPath(image)}\r\n            style={{\r\n              opacity: index === currentImageIndex ? 1 : 0,\r\n              transition: 'opacity 1s ease-in-out'\r\n            }}\r\n          />\r\n        ))}\r\n      </BackgroundSlider>\r\n      <Overlay />\r\n      <ContentWrapper>\r\n        <Title>{title}</Title>\r\n        {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        <ButtonGroup>\r\n          {buttons.map((button, index) => (\r\n            <Button\r\n              key={index}\r\n              color={button.color}\r\n              onClick={() => window.location.href = button.link}\r\n            >\r\n              {button.title}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </ContentWrapper>\r\n    </HeroContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(HeroBlock);\r\n"],"names":["HeroContainer","styled","div","_templateObject","_taggedTemplateLiteral","BackgroundSlider","_templateObject2","BackgroundImage","img","_templateObject3","Overlay","_templateObject4","ContentWrapper","_templateObject5","Title","h1","_templateObject6","Subtitle","p","_templateObject7","ButtonGroup","_templateObject8","props","color","withTranslation","_ref","title","subtitle","buttons","backgroundImages","_useState","useState","_useState2","_slicedToArray","currentImageIndex","setCurrentImageIndex","useEffect","interval","setInterval","prevIndex","length","clearInterval","_jsxs","children","_jsx","map","image","index","src","getAssetPath","style","opacity","transition","button","Button","onClick","window","location","href","link"],"sourceRoot":""}