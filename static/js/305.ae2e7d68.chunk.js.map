{"version":3,"file":"static/js/305.ae2e7d68.chunk.js","mappings":"sNAMA,MAAMA,EAAiBC,EAAAA,GAAOC,GAAG;;;;;;EAa3BC,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,EAAK;;;;;;;EAqD/B,EA5CcC,KACZ,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IACjC,OAAEC,IAAWC,EAAAA,EAAAA,KACbC,GAAUC,EAAAA,EAAAA,MAchB,OACEC,EAAAA,EAAAA,KAACb,EAAc,CAAAc,UACbC,EAAAA,EAAAA,MAACZ,EAAU,CACTa,SAfWC,UACfV,GAAW,GACX,UACQE,EAAOS,EAAOC,MAAOD,EAAOE,UAClCT,EAAQU,KAAK,SACf,CAAE,MAAOC,GACPC,EAAAA,GAAQD,MAAM,sBAChB,CAAC,QACCf,GAAW,EACb,GAMgDO,SAAA,EAE5CD,EAAAA,EAAAA,KAACT,EAAAA,EAAKoB,KAAI,CACRC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAMJ,QAAS,6BAA8BT,UAEjED,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,YAAY,aAErBhB,EAAAA,EAAAA,KAACT,EAAAA,EAAKoB,KAAI,CACRC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMJ,QAAS,gCAAiCT,UAEpED,EAAAA,EAAAA,KAACe,EAAAA,EAAME,SAAQ,CAACD,YAAY,gBAE9BhB,EAAAA,EAAAA,KAACT,EAAAA,EAAKoB,KAAI,CAAAV,UACRD,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,KAAK,UAAUC,SAAS,SAAS3B,QAASA,EAAS4B,OAAK,EAAApB,SAAC,gBAKtD,C","sources":["pages/Login/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, message } from 'antd';\nimport styled from 'styled-components';\nimport { useFirebase } from '../../hooks/useFirebase';\n\nconst LoginContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 100px);\n  padding-top: 100px;\n`;\n\ninterface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst StyledForm = styled(Form)`\n  width: 100%;\n  max-width: 400px;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  background: white;\n`;\n\nconst Login = () => {\n  const [loading, setLoading] = useState(false);\n  const { signIn } = useFirebase();\n  const history = useHistory();\n\n  const onFinish = async (values: LoginFormValues) => {\n    setLoading(true);\n    try {\n      await signIn(values.email, values.password);\n      history.push('/admin');\n    } catch (error) {\n      message.error('Invalid credentials');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <LoginContainer>\n      <StyledForm \n        onFinish={onFinish as (values: any) => void}\n      >\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: 'Please input your email!' }]}\n        >\n          <Input placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password!' }]}\n        >\n          <Input.Password placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\n            Login\n          </Button>\n        </Form.Item>\n      </StyledForm>\n    </LoginContainer>\n  );\n};\n\nexport default Login; "],"names":["LoginContainer","styled","div","StyledForm","Form","Login","loading","setLoading","useState","signIn","useFirebase","history","useHistory","_jsx","children","_jsxs","onFinish","async","values","email","password","push","error","message","Item","name","rules","required","Input","placeholder","Password","Button","type","htmlType","block"],"sourceRoot":""}