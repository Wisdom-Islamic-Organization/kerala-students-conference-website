{"version":3,"file":"static/js/765.75b15013.chunk.js","mappings":"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","sources":["config/firebase.js","common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","components/RegisterForm/styles.ts","components/RegisterForm/index.tsx"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst storage = getStorage(app);\n\nexport { app, analytics, db, auth, storage }; ","import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport { db } from \"../../config/firebase\";\r\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface IValues {\r\n  name?: string;\r\n  email?: string;\r\n  message?: string;\r\n  age?: string;\r\n  standard?: string;\r\n  gender?: string;\r\n  subject?: string;\r\n  institution?: string;\r\n  yearOfStudy?: string;\r\n  yearOfCompletion?: string;\r\n  district?: string;\r\n  localBody?: string;\r\n  pinCode?: string;\r\n  contactNumber?: string;\r\n  whatsappNumber?: string;\r\n}\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n  age: \"\",\r\n  standard: \"\",\r\n  gender: \"\",\r\n  subject: \"\",\r\n  institution: \"\",\r\n  yearOfStudy: \"\",\r\n  yearOfCompletion: \"\",\r\n  district: \"\",\r\n  localBody: \"\",\r\n  pinCode: \"\",\r\n  contactNumber: \"\",\r\n  whatsappNumber: \"\",\r\n};\r\n\r\nexport const useForm = (validate: { (values: IValues): IValues }) => {\r\n  const history = useHistory();\r\n  const [formState, setFormState] = useState<{\r\n    values: IValues;\r\n    errors: IValues;\r\n  }>({\r\n    values: { ...initialValues },\r\n    errors: { ...initialValues },\r\n  });\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add registration data to Firestore\r\n        const registrationsRef = collection(db, 'registrations');\r\n        await addDoc(registrationsRef, {\r\n          ...values,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: { ...initialValues },\r\n          errors: { ...initialValues },\r\n        });\r\n\r\n        // Show success notification\r\n        notification[\"success\"]({\r\n          message: \"Registration Successful\",\r\n          description: \"Thank you for registering! We'll contact you soon.\",\r\n          duration: 3,\r\n        });\r\n\r\n        // Redirect to home page after 2 seconds\r\n        setTimeout(() => {\r\n          history.push('/#hero');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit registration. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: string } }\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n","import { RegisterValues } from \"../../components/RegisterForm/types\";\r\n\r\nconst validate = (values: RegisterValues): RegisterValues => {\r\n  let errors: RegisterValues = {};\r\n  \r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n\r\n  if (!values.gender) {\r\n    errors.gender = \"Gender is required\";\r\n  }\r\n\r\n  if (!values.age) {\r\n    errors.age = \"Age is required\";\r\n  } else if (isNaN(Number(values.age)) || Number(values.age) < 0) {\r\n    errors.age = \"Please enter a valid age\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  } else if (!/^\\d{10}$/.test(values.contactNumber)) {\r\n    errors.contactNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (values.whatsappNumber && !/^\\d{10}$/.test(values.whatsappNumber)) {\r\n    errors.whatsappNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (!values.pinCode) {\r\n    errors.pinCode = \"PIN code is required\";\r\n  } else if (!/^\\d{6}$/.test(values.pinCode)) {\r\n    errors.pinCode = \"Please enter a valid 6-digit PIN code\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(placeholder)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import styled from \"styled-components\";\n\nexport const RegisterContainer = styled(\"div\")`\n  padding: 7rem 0 5rem;\n  margin-top: 60px;\n  display: flex;\n  min-height: calc(100vh - 60px);\n\n  @media only screen and (max-width: 1024px) {\n    padding: 5rem 0 3rem;\n  }\n`;\n\nexport const LeftColumnWrapper = styled(\"div\")`\n  height: calc(100vh - 120px);\n  position: relative;\n  padding-right: 2rem;\n\n  @media only screen and (max-width: 1024px) {\n    height: auto;\n    padding-right: 0;\n  }\n`;\n\nexport const LeftColumn = styled(\"div\")`\n  position: sticky;\n  top: 40%;\n  width: 100%;\n  max-width: 600px;\n  background: white;\n\n  @media only screen and (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    width: 100%;\n  }\n`;\n\nexport const FormGroup = styled(\"form\")`\n  width: 100%;\n  max-width: 600px;\n  overflow-y: auto;\n  margin-left: auto;\n\n  @media only screen and (max-width: 1045px) {\n    max-width: 100%;\n    margin-top: 2rem;\n    padding-left: 0;\n  }\n\n  .ant-col {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Span = styled(\"span\")`\n  display: block;\n  font-weight: 600;\n  color: rgb(255, 130, 92);\n  height: 0.775rem;\n  padding: 0 0.675rem;\n`;\n\nexport const ButtonContainer = styled(\"div\")`\n  text-align: end;\n  position: relative;\n  margin-top: 2rem;\n\n  @media only screen and (max-width: 414px) {\n    padding-top: 0.75rem;\n  }\n`; ","import { Row, Col, Select } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Slide } from \"react-awesome-reveal\";\nimport { RegisterFormProps, ValidationTypeProps } from \"./types\";\nimport { useForm } from \"../../common/utils/useForm\";\nimport validate from \"../../common/utils/validationRules\";\nimport { Button } from \"../../common/Button\";\nimport Block from \"../Block\";\nimport Input from \"../../common/Input\";\nimport { RegisterContainer, FormGroup, Span, ButtonContainer, LeftColumn, LeftColumnWrapper } from \"./styles\";\n\nconst { Option } = Select;\n\nconst RegisterForm = ({ title, content, id, t }: RegisterFormProps) => {\n  const { values, errors, handleChange: originalHandleChange, handleSubmit } = useForm(validate);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: any } }) => {\n    originalHandleChange(e as React.ChangeEvent<HTMLInputElement>);\n  };\n\n  const ValidationType = ({ type }: ValidationTypeProps) => {\n    const ErrorMessage = errors[type as keyof typeof errors];\n    return <Span>{ErrorMessage}</Span>;\n  };\n\n  return (\n    <RegisterContainer id={id}>\n      <Row justify=\"space-between\" align=\"top\">\n        <Col lg={12} md={11} sm={24} xs={24}>\n          <LeftColumnWrapper>\n            <LeftColumn>\n              <Slide direction=\"left\" triggerOnce>\n                <Block title={title} content={content} />\n              </Slide>\n            </LeftColumn>\n          </LeftColumnWrapper>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Slide direction=\"right\" triggerOnce>\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Full Name\"\n                  value={values.name || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"name\" />\n              </Col>\n              \n              <Col span={24}>\n                <Select\n                  style={{ width: '100%', marginBottom: '15px' }}\n                  placeholder=\"Select Gender\"\n                  onChange={(value) => handleChange({ target: { name: 'gender', value }})}\n                >\n                  <Option value=\"male\">Male</Option>\n                  <Option value=\"female\">Female</Option>\n                  <Option value=\"other\">Other</Option>\n                </Select>\n                <ValidationType type=\"gender\" />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"number\"\n                    name=\"age\"\n                    placeholder=\"Age\"\n                    value={values.age || \"\"}\n                    onChange={handleChange}\n                  />\n                  <ValidationType type=\"age\" />\n                </Col>\n                <Col span={12}>\n                  <Input\n                    type=\"text\"\n                    name=\"standard\"\n                    placeholder=\"Standard/Course\"\n                    value={values.standard || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"subject\"\n                  placeholder=\"Subject\"\n                  value={values.subject || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"institution\"\n                  placeholder=\"Institution\"\n                  value={values.institution || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"text\"\n                    name=\"yearOfStudy\"\n                    placeholder=\"Year of Study\"\n                    value={values.yearOfStudy || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Input\n                    type=\"text\"\n                    name=\"yearOfCompletion\"\n                    placeholder=\"Year of Completion\"\n                    value={values.yearOfCompletion || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"text\"\n                    name=\"district\"\n                    placeholder=\"District\"\n                    value={values.district || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Input\n                    type=\"text\"\n                    name=\"localBody\"\n                    placeholder=\"Local Body\"\n                    value={values.localBody || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"pinCode\"\n                  placeholder=\"Pin Code\"\n                  value={values.pinCode || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"tel\"\n                    name=\"contactNumber\"\n                    placeholder=\"Contact Number\"\n                    value={values.contactNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Input\n                    type=\"tel\"\n                    name=\"whatsappNumber\"\n                    placeholder=\"WhatsApp Number\"\n                    value={values.whatsappNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n                  value={values.email || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"email\" />\n              </Col>\n\n              <ButtonContainer>\n                <Button name=\"submit\">{t(\"Register\")}</Button>\n              </ButtonContainer>\n            </FormGroup>\n          </Slide>\n        </Col>\n      </Row>\n    </RegisterContainer>\n  );\n};\n\nexport default withTranslation()(RegisterForm); "],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","getAuth","getStorage","initialValues","name","email","message","age","standard","gender","subject","institution","yearOfStudy","yearOfCompletion","district","localBody","pinCode","contactNumber","whatsappNumber","values","errors","isNaN","Number","test","Content","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","TextWrapper","_templateObject3","withTranslation","_ref","title","content","t","_jsxs","children","_jsx","StyledInput","Label","placeholder","onChange","htmlFor","id","RegisterContainer","LeftColumnWrapper","LeftColumn","FormGroup","_templateObject4","Span","_templateObject5","ButtonContainer","_templateObject6","Option","Select","_useForm","validate","history","useHistory","_useState","useState","_objectSpread","_useState2","_slicedToArray","formState","setFormState","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","registrationsRef","wrap","_context","prev","next","preventDefault","prevState","Object","every","error","collection","addDoc","timestamp","serverTimestamp","notification","description","duration","setTimeout","push","t0","console","stop","_x","apply","arguments","handleChange","_event$target","target","value","_defineProperty","useForm","originalHandleChange","e","ValidationType","_ref2","type","ErrorMessage","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","style","width","marginBottom","gutter","Button"],"sourceRoot":""}