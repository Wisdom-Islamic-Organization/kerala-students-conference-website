{"version":3,"file":"static/js/21.06e24b61.chunk.js","mappings":"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","sources":["common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","config/firebase.js","common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","components/RegisterForm/styles.ts","components/RegisterForm/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(placeholder)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize services\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst storage = getStorage(app);\n\nexport { app, analytics, db, auth, storage }; ","import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport { db } from \"../../config/firebase\";\r\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface IContactValues {\r\n  name?: string;\r\n  contactNumber?: string;\r\n}\r\n\r\ninterface IRegistrationValues {\r\n  name?: string;\r\n  email?: string;\r\n  age?: string;\r\n  standard?: string;\r\n  gender?: string;\r\n  subject?: string;\r\n  institution?: string;\r\n  yearOfStudy?: string;\r\n  yearOfCompletion?: string;\r\n  district?: string;\r\n  otherDistrict?: string;\r\n  localBody?: string;\r\n  contactNumber?: string;\r\n  whatsappNumber?: string;\r\n  isDifferentWhatsApp?: string;\r\n}\r\n\r\nconst initialRegistrationValues: IRegistrationValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  standard: \"\",\r\n  gender: \"\",\r\n  subject: \"\",\r\n  institution: \"\",\r\n  yearOfStudy: \"\",\r\n  yearOfCompletion: \"\",\r\n  district: \"\",\r\n  otherDistrict: \"\",\r\n  localBody: \"\",\r\n  contactNumber: \"\",\r\n  whatsappNumber: \"\",\r\n  isDifferentWhatsApp: 'no',\r\n};\r\n\r\nconst initialContactValues: IContactValues = {\r\n  name: \"\",\r\n  contactNumber: \"\",\r\n};\r\n\r\nexport const useForm = <T extends IRegistrationValues | IContactValues>(\r\n  validate: (values: T) => T,\r\n  formType: 'registration' | 'contact' = 'registration'\r\n) => {\r\n  const history = useHistory();\r\n  const [formState, setFormState] = useState<{\r\n    values: T;\r\n    errors: T;\r\n  }>({\r\n    values: (formType === 'registration' ? initialRegistrationValues : initialContactValues) as T,\r\n    errors: (formType === 'registration' ? initialRegistrationValues : initialContactValues) as T,\r\n  });\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add registration data to Firestore\r\n        const registrationsRef = collection(db, 'registrations');\r\n        await addDoc(registrationsRef, {\r\n          ...values,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: (formType === 'registration' ? { ...initialRegistrationValues } : { ...initialContactValues }) as T,\r\n          errors: (formType === 'registration' ? { ...initialRegistrationValues } : { ...initialContactValues }) as T,\r\n        });\r\n\r\n        // Scroll to top first\r\n        scrollToTop();\r\n\r\n        // Show success notification after scrolling\r\n        setTimeout(() => {\r\n          notification[\"success\"]({\r\n            message: \"Registration Successful\",\r\n            description: \"Thank you for registering! We'll contact you soon.\",\r\n            duration: 3,\r\n          });\r\n        }, 500);\r\n\r\n        // Redirect to home page after notification\r\n        setTimeout(() => {\r\n          history.push('/');\r\n        }, 2500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit registration. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: string } }\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleContact = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add contact message to Firestore\r\n        const contactsRef = collection(db, 'contacts');\r\n        await addDoc(contactsRef, {\r\n          name: values.name,\r\n          contactNumber: values.contactNumber,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: { ...initialContactValues } as T,\r\n          errors: { ...initialContactValues } as T,\r\n        });\r\n\r\n        // Show success notification\r\n        notification[\"success\"]({\r\n          message: \"Message Sent\",\r\n          description: \"Thank you for contacting us! We'll get back to you soon.\",\r\n          duration: 3,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Contact form error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to send message. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    handleContact,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n","import { RegisterValues } from \"../../components/RegisterForm/types\";\r\n\r\nconst validate = (values: RegisterValues): RegisterValues => {\r\n  let errors: RegisterValues = {};\r\n  \r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n\r\n  if (!values.gender) {\r\n    errors.gender = \"Gender is required\";\r\n  }\r\n\r\n  if (!values.age) {\r\n    errors.age = \"Age is required\";\r\n  } else if (isNaN(Number(values.age)) || Number(values.age) < 0) {\r\n    errors.age = \"Please enter a valid age\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  } else if (!/^\\d{10}$/.test(values.contactNumber)) {\r\n    errors.contactNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (values.whatsappNumber && !/^\\d{10}$/.test(values.whatsappNumber)) {\r\n    errors.whatsappNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateContact = (values: any) => {\r\n  let errors: any = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\nimport { Select } from \"antd\";\n\nexport const RegisterContainer = styled(\"div\")`\n  padding: 7rem 0 5rem;\n  margin-top: 60px;\n  display: flex;\n  min-height: calc(100vh - 60px);\n\n  @media only screen and (max-width: 1024px) {\n    padding: 5rem 0 3rem;\n  }\n`;\n\nexport const LeftColumnWrapper = styled(\"div\")`\n  height: calc(100vh - 120px);\n  position: relative;\n  padding-right: 2rem;\n\n  @media only screen and (max-width: 1024px) {\n    height: auto;\n    padding-right: 0;\n  }\n`;\n\nexport const LeftColumn = styled(\"div\")`\n  position: sticky;\n  top: 40%;\n  width: 100%;\n  max-width: 600px;\n  background: white;\n\n  @media only screen and (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    width: 100%;\n  }\n`;\n\nexport const FormGroup = styled(\"form\")`\n  width: 100%;\n  max-width: 600px;\n  overflow-y: auto;\n  margin-left: auto;\n\n  @media only screen and (max-width: 1045px) {\n    max-width: 100%;\n    margin-top: 2rem;\n    padding-left: 0;\n  }\n\n  .ant-col {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Span = styled(\"span\")`\n  display: block;\n  font-weight: 600;\n  color: rgb(36, 182, 200);\n  height: 0.775rem;\n  padding: 0 0.675rem;\n`;\n\nexport const ButtonContainer = styled(\"div\")`\n  text-align: center;\n  position: relative;\n  margin-top: 2rem;\n\n  button {\n    border: 2px solid white;\n  }\n\n  @media only screen and (max-width: 414px) {\n    padding-top: 0.75rem;\n  }\n`;\n\nexport const Label = styled(\"label\")`\n  display: block;\n  margin-bottom: 6px;\n  margin-top: 15px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n`;\n\nexport const StyledSelect = styled(Select)`\n  width: 100%;\n  margin-top: 5px;\n  \n  .ant-select-selector {\n    border: 1px solid #dadada !important;\n    border-radius: 4px !important;\n    padding: 8px 12px !important;\n    height: auto !important;\n    \n    &:hover, &:focus {\n      border-color: rgb(0, 0, 0) !important;\n    }\n  }\n`; ","import { Row, Col, Select } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Slide } from \"react-awesome-reveal\";\nimport { RegisterFormProps, ValidationTypeProps } from \"./types\";\nimport { useForm } from \"../../common/utils/useForm\";\nimport validate from \"../../common/utils/validationRules\";\nimport { Button } from \"../../common/Button\";\nimport Block from \"../Block\";\nimport Input from \"../../common/Input\";\nimport DistrictCities from '../../content/DistrictCities.json';\nimport { RegisterContainer, FormGroup, Span, ButtonContainer, LeftColumn, LeftColumnWrapper, Label, StyledSelect } from \"./styles\";\n\nconst { Option } = Select;\n\nconst RegisterForm = ({ title, content, id, t }: RegisterFormProps) => {\n  const { values, errors, handleChange: originalHandleChange, handleSubmit } = useForm(validate, 'registration');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: any } }) => {\n    originalHandleChange(e as React.ChangeEvent<HTMLInputElement>);\n  };\n\n  const ValidationType = ({ type }: ValidationTypeProps) => {\n    const ErrorMessage = errors[type as keyof typeof errors];\n    return <Span>{ErrorMessage}</Span>;\n  };\n\n  const educationLevels = [\n    \"High School\",\n    \"Higher Secondary\",\n    \"UG\",\n    \"PG\",\n    \"MPhil\",\n    \"PhD\",\n    \"Others\"\n  ];\n\n  const shouldShowYearFields = (standard: string) => {\n    return [\"UG\", \"PG\", \"MPhil\", \"PhD\", \"Others\"].includes(standard);\n  };\n\n  const yearOfStudyOptions = [1, 2, 3, 4, 5];\n\n  const getYearSuffix = (year: number) => {\n    if (year === 1) return \"st\";\n    if (year === 2) return \"nd\";\n    if (year === 3) return \"rd\";\n    return \"th\";\n  };\n\n  const districts = [...Object.keys(DistrictCities), \"Others\"];\n\n  return (\n    <RegisterContainer id={id}>\n      <Row justify=\"space-between\" align=\"top\">\n        <Col lg={12} md={11} sm={24} xs={24}>\n          <LeftColumnWrapper>\n            <LeftColumn>\n              <Slide direction=\"left\" triggerOnce>\n                <Block title={title} content={content} />\n              </Slide>\n            </LeftColumn>\n          </LeftColumnWrapper>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Slide direction=\"right\" triggerOnce>\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Full Name\"\n                  value={values.name || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"name\" />\n              </Col>\n              \n              <Col span={24}>\n                <Label>Gender</Label>\n                <StyledSelect\n                  placeholder=\"Select Gender\"\n                  onChange={(value) => handleChange({ target: { name: 'gender', value }})}\n                >\n                  <Option value=\"male\">Male</Option>\n                  <Option value=\"female\">Female</Option>\n                </StyledSelect>\n                <ValidationType type=\"gender\" />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"number\"\n                    name=\"age\"\n                    placeholder=\"Age\"\n                    value={values.age || \"\"}\n                    onChange={handleChange}\n                  />\n                  <ValidationType type=\"age\" />\n                </Col>\n                <Col span={12}>\n                  <Label>Standard/Course</Label>\n                  <StyledSelect\n                    placeholder=\"Standard/Course\"\n                    onChange={(value) => handleChange({ target: { name: 'standard', value }})}\n                    value={values.standard || undefined}\n                  >\n                    {educationLevels.map((level) => (\n                      <Option key={level} value={level}>{level}</Option>\n                    ))}\n                  </StyledSelect>\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"subject\"\n                  placeholder=\"Subject\"\n                  value={values.subject || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"institution\"\n                  placeholder=\"Institution\"\n                  value={values.institution || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              {values.standard && shouldShowYearFields(values.standard) && (\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <Label>Year of Study</Label>\n                    <StyledSelect\n                      placeholder=\"Year of Study\"\n                      onChange={(value) => handleChange({ target: { name: 'yearOfStudy', value }})}\n                      value={values.yearOfStudy || undefined}\n                    >\n                      {yearOfStudyOptions.map((year) => (\n                        <Option key={year} value={year}>{`${year}${getYearSuffix(year)} Year`}</Option>\n                      ))}\n                    </StyledSelect>\n                  </Col>\n                  <Col span={12}>\n                    <Input\n                      type=\"text\"\n                      name=\"yearOfCompletion\"\n                      placeholder=\"Year of Completion\"\n                      value={values.yearOfCompletion || \"\"}\n                      onChange={handleChange}\n                    />\n                  </Col>\n                </Row>\n              )}\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Label>District</Label>\n                  <StyledSelect\n                    placeholder=\"Select District\"\n                    onChange={(value) => handleChange({ target: { name: 'district', value }})}\n                    value={values.district || undefined}\n                  >\n                    {districts.map((district) => (\n                      <Option key={district} value={district}>{district}</Option>\n                    ))}\n                  </StyledSelect>\n                  <ValidationType type=\"district\" />\n                </Col>\n                <Col span={12}>\n                  {values.district === 'Others' ? (\n                    <div>\n                      <Input\n                        type=\"text\"\n                        name=\"otherDistrict\"\n                        placeholder=\"Enter District Name\"\n                        value={values.otherDistrict || \"\"}\n                        onChange={handleChange}\n                      />\n                    </div>\n                  ) : (\n                    <>\n                      <Label>Local Body</Label>\n                      <StyledSelect\n                        placeholder=\"Select Local Body\"\n                        onChange={(value) => handleChange({ target: { name: 'localBody', value }})}\n                        value={values.localBody || undefined}\n                      >\n                        {values.district && DistrictCities[values.district as keyof typeof DistrictCities]?.map((city: string) => (\n                          <Option key={city} value={city}>{city}</Option>\n                        ))}\n                      </StyledSelect>\n                    </>\n                  )}\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"tel\"\n                    name=\"contactNumber\"\n                    placeholder=\"Contact Number\"\n                    value={values.contactNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                  <ValidationType type=\"contactNumber\" />\n                </Col>\n                <Col span={12}>\n                  <Label>Is WhatsApp number different?</Label>\n                  <StyledSelect\n                    placeholder=\"Select Yes/No\"\n                    onChange={(value) => handleChange({ target: { name: 'isDifferentWhatsApp', value }})}\n                    value={values.isDifferentWhatsApp || undefined}\n                  >\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"yes\">Yes</Option>\n                  </StyledSelect>\n                </Col>\n              </Row>\n\n              {values.isDifferentWhatsApp === 'yes' && (\n                <Col span={24}>\n                  <Input\n                    type=\"tel\"\n                    name=\"whatsappNumber\"\n                    placeholder=\"WhatsApp Number\"\n                    value={values.whatsappNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                  {values.isDifferentWhatsApp === 'yes' && <ValidationType type=\"whatsappNumber\" />}\n                </Col>\n              )}\n\n              <Col span={24}>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n                  value={values.email || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"email\" />\n              </Col>\n\n              <ButtonContainer>\n                <Button name=\"submit\">{t(\"Register\")}</Button>\n              </ButtonContainer>\n            </FormGroup>\n          </Slide>\n        </Col>\n      </Row>\n    </RegisterContainer>\n  );\n};\n\nexport default withTranslation()(RegisterForm); "],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","StyledInput","_templateObject2","Label","_templateObject3","withTranslation","_ref","name","placeholder","onChange","t","_jsxs","children","_jsx","htmlFor","id","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","getAuth","getStorage","initialRegistrationValues","email","age","standard","gender","subject","institution","yearOfStudy","yearOfCompletion","district","otherDistrict","localBody","contactNumber","whatsappNumber","isDifferentWhatsApp","initialContactValues","useForm","validate","formType","arguments","length","undefined","history","useHistory","formState","setFormState","useState","values","errors","handleChange","event","value","target","prevState","_objectSpread","handleSubmit","async","preventDefault","Object","every","error","registrationsRef","collection","addDoc","timestamp","serverTimestamp","window","scrollTo","top","behavior","setTimeout","notification","message","description","duration","push","console","handleContact","contactsRef","validateContact","isNaN","Number","test","Content","TextWrapper","title","content","RegisterContainer","LeftColumnWrapper","LeftColumn","FormGroup","_templateObject4","Span","_templateObject5","ButtonContainer","_templateObject6","_templateObject7","StyledSelect","Select","_templateObject8","Option","_DistrictCities","originalHandleChange","e","ValidationType","_ref2","type","ErrorMessage","getYearSuffix","year","districts","keys","DistrictCities","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","gutter","map","level","includes","concat","_Fragment","city","Button"],"sourceRoot":""}