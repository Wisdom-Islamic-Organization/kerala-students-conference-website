{"version":3,"file":"static/js/745.d86ef779.chunk.js","mappings":"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","sources":["components/Block/styles.ts","components/Block/index.tsx","components/RegisterForm/styles.ts","components/RegisterForm/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","services/api.ts","common/utils/useForm.tsx","common/utils/validationRules.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\nimport { Select } from \"antd\";\n\nexport const RegisterContainer = styled(\"div\")`\n  padding: 7rem 0 5rem;\n  margin-top: 60px;\n  display: flex;\n  min-height: calc(100vh - 60px);\n\n  @media only screen and (max-width: 1024px) {\n    padding: 5rem 0 3rem;\n  }\n`;\n\nexport const LeftColumnWrapper = styled(\"div\")`\n  height: calc(100vh - 120px);\n  position: relative;\n  padding-right: 2rem;\n\n  @media only screen and (max-width: 1024px) {\n    height: auto;\n    padding-right: 0;\n  }\n`;\n\nexport const LeftColumn = styled(\"div\")`\n  position: sticky;\n  top: 40%;\n  width: 100%;\n  max-width: 600px;\n  background: white;\n\n  @media only screen and (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    width: 100%;\n  }\n`;\n\nexport const FormGroup = styled(\"form\")`\n  width: 100%;\n  max-width: 600px;\n  overflow-y: auto;\n  margin-left: auto;\n\n  @media only screen and (max-width: 1045px) {\n    max-width: 100%;\n    margin-top: 2rem;\n    padding-left: 0;\n  }\n\n  .ant-col {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Span = styled(\"span\")`\n  display: block;\n  font-weight: 600;\n  color: rgb(36, 182, 200);\n  height: 0.775rem;\n  padding: 0 0.675rem;\n`;\n\nexport const ButtonContainer = styled(\"div\")`\n  text-align: center;\n  position: relative;\n  margin-top: 2rem;\n\n  button {\n    border: 2px solid white;\n  }\n\n  @media only screen and (max-width: 414px) {\n    padding-top: 0.75rem;\n  }\n`;\n\nexport const Label = styled(\"label\")`\n  display: block;\n  margin-bottom: 6px;\n  margin-top: 15px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n`;\n\nexport const StyledSelect = styled(Select)`\n  width: 100%;\n  margin-top: 5px;\n  \n  .ant-select-selector {\n    border: 1px solid #dadada !important;\n    border-radius: 4px !important;\n    padding: 8px 12px !important;\n    height: auto !important;\n    \n    &:hover, &:focus {\n      border-color: rgb(0, 0, 0) !important;\n    }\n  }\n`; ","import { Row, Col, Select } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { Slide } from \"react-awesome-reveal\";\nimport { RegisterFormProps, ValidationTypeProps } from \"./types\";\nimport { useForm } from \"../../common/utils/useForm\";\nimport validate from \"../../common/utils/validationRules\";\nimport { Button } from \"../../common/Button\";\nimport Block from \"../Block\";\nimport Input from \"../../common/Input\";\nimport DistrictCities from '../../content/DistrictCities.json';\nimport { RegisterContainer, FormGroup, Span, ButtonContainer, LeftColumn, LeftColumnWrapper, Label, StyledSelect } from \"./styles\";\n\nconst { Option } = Select;\n\nconst RegisterForm = ({ title, content, id, t }: RegisterFormProps) => {\n  const { values, errors, handleChange: originalHandleChange, handleSubmit } = useForm(validate, 'registration');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: any } }) => {\n    originalHandleChange(e as React.ChangeEvent<HTMLInputElement>);\n  };\n\n  const ValidationType = ({ type }: ValidationTypeProps) => {\n    const ErrorMessage = errors[type as keyof typeof errors];\n    return <Span>{ErrorMessage}</Span>;\n  };\n\n  const educationLevels = [\n    \"High School\",\n    \"Higher Secondary\",\n    \"UG\",\n    \"PG\",\n    \"MPhil\",\n    \"PhD\",\n    \"Others\"\n  ];\n\n  const shouldShowYearFields = (standard: string) => {\n    return [\"UG\", \"PG\", \"MPhil\", \"PhD\", \"Others\"].includes(standard);\n  };\n\n  const yearOfStudyOptions = [1, 2, 3, 4, 5];\n\n  const getYearSuffix = (year: number) => {\n    if (year === 1) return \"st\";\n    if (year === 2) return \"nd\";\n    if (year === 3) return \"rd\";\n    return \"th\";\n  };\n\n  const districts = [...Object.keys(DistrictCities), \"Others\"];\n\n  return (\n    <RegisterContainer id={id}>\n      <Row justify=\"space-between\" align=\"top\">\n        <Col lg={12} md={11} sm={24} xs={24}>\n          <LeftColumnWrapper>\n            <LeftColumn>\n              <Slide direction=\"left\" triggerOnce>\n                <Block title={title} content={content} />\n              </Slide>\n            </LeftColumn>\n          </LeftColumnWrapper>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Slide direction=\"right\" triggerOnce>\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Full Name\"\n                  value={values.name || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"name\" />\n              </Col>\n              \n              <Col span={24}>\n                <Label>Gender</Label>\n                <StyledSelect\n                  placeholder=\"Select Gender\"\n                  onChange={(value) => handleChange({ target: { name: 'gender', value }})}\n                >\n                  <Option value=\"male\">Male</Option>\n                  <Option value=\"female\">Female</Option>\n                </StyledSelect>\n                <ValidationType type=\"gender\" />\n              </Col>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"number\"\n                    name=\"age\"\n                    placeholder=\"Age\"\n                    value={values.age || \"\"}\n                    onChange={handleChange}\n                  />\n                  <ValidationType type=\"age\" />\n                </Col>\n                <Col span={12}>\n                  <Label>Standard/Course</Label>\n                  <StyledSelect\n                    placeholder=\"Standard/Course\"\n                    onChange={(value) => handleChange({ target: { name: 'standard', value }})}\n                    value={values.standard || undefined}\n                  >\n                    {educationLevels.map((level) => (\n                      <Option key={level} value={level}>{level}</Option>\n                    ))}\n                  </StyledSelect>\n                </Col>\n              </Row>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"subject\"\n                  placeholder=\"Subject\"\n                  value={values.subject || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"institution\"\n                  placeholder=\"Institution\"\n                  value={values.institution || \"\"}\n                  onChange={handleChange}\n                />\n              </Col>\n\n              {values.standard && shouldShowYearFields(values.standard) && (\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <Label>Year of Study</Label>\n                    <StyledSelect\n                      placeholder=\"Year of Study\"\n                      onChange={(value) => handleChange({ target: { name: 'yearOfStudy', value }})}\n                      value={values.yearOfStudy || 0}\n                    >\n                      {yearOfStudyOptions.map((year) => (\n                        <Option key={year} value={year}>{`${year}${getYearSuffix(year)} Year`}</Option>\n                      ))}\n                    </StyledSelect>\n                  </Col>\n                  <Col span={12}>\n                    <Input\n                      type=\"text\"\n                      name=\"yearOfCompletion\"\n                      placeholder=\"Year of Completion\"\n                      value={values.yearOfCompletion || \"\"}\n                      onChange={handleChange}\n                    />\n                  </Col>\n                </Row>\n              )}\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Label>District</Label>\n                  <StyledSelect\n                    placeholder=\"Select District\"\n                    onChange={(value) => handleChange({ target: { name: 'district', value }})}\n                    value={values.district || undefined}\n                  >\n                    {districts.map((district) => (\n                      <Option key={district} value={district}>{district}</Option>\n                    ))}\n                  </StyledSelect>\n                  <ValidationType type=\"district\" />\n                </Col>\n                <Col span={12}>\n                  {values.district === 'Others' ? (\n                    <div>\n                      <Input\n                        type=\"text\"\n                        name=\"otherDistrict\"\n                        placeholder=\"Enter District Name\"\n                        value={values.otherDistrict || \"\"}\n                        onChange={handleChange}\n                      />\n                    </div>\n                  ) : (\n                    <>\n                      <Label>Local Body</Label>\n                      <StyledSelect\n                        placeholder=\"Select Local Body\"\n                        onChange={(value) => handleChange({ target: { name: 'localBody', value }})}\n                        value={values.localBody || undefined}\n                      >\n                        {values.district && DistrictCities[values.district as keyof typeof DistrictCities]?.map((city: string) => (\n                          <Option key={city} value={city}>{city}</Option>\n                        ))}\n                      </StyledSelect>\n                    </>\n                  )}\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Input\n                    type=\"tel\"\n                    name=\"contactNumber\"\n                    placeholder=\"Contact Number\"\n                    value={values.contactNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                  <ValidationType type=\"contactNumber\" />\n                </Col>\n                <Col span={12}>\n                  <Label>Is WhatsApp number different?</Label>\n                  <StyledSelect\n                    placeholder=\"Select Yes/No\"\n                    onChange={(value) => handleChange({ target: { name: 'isDifferentWhatsApp', value }})}\n                    value={values.isDifferentWhatsApp || undefined}\n                  >\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"yes\">Yes</Option>\n                  </StyledSelect>\n                </Col>\n              </Row>\n\n              {values.isDifferentWhatsApp === 'yes' && (\n                <Col span={24}>\n                  <Input\n                    type=\"tel\"\n                    name=\"whatsappNumber\"\n                    placeholder=\"WhatsApp Number\"\n                    value={values.whatsappNumber || \"\"}\n                    onChange={handleChange}\n                  />\n                  {values.isDifferentWhatsApp === 'yes' && <ValidationType type=\"whatsappNumber\" />}\n                </Col>\n              )}\n\n              <Col span={24}>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n                  value={values.email || \"\"}\n                  onChange={handleChange}\n                />\n                <ValidationType type=\"email\" />\n              </Col>\n\n              <ButtonContainer>\n                <Button name=\"submit\">{t(\"Register\")}</Button>\n              </ButtonContainer>\n            </FormGroup>\n          </Slide>\n        </Col>\n      </Row>\n    </RegisterContainer>\n  );\n};\n\nexport default withTranslation()(RegisterForm); ","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(placeholder)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","interface RegistrationPayload {\n  event_id: number;\n  name: string;\n  email: string;\n  age: string;\n  class: string;\n  sex: string;\n  subject: string;\n  institution: string;\n  year_of_study: string;\n  year_of_completion: string;\n  district_name: string;\n  district_name_other: string;\n  local_body: string;\n  mobile: string;\n  whatsapp: string;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_GUIDE_API_BASE_URL;\nconst API_TOKEN = process.env.REACT_APP_GUIDE_API_TOKEN;\n\nexport const submitRegistration = async (data: RegistrationPayload) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/p/event-registration`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${API_TOKEN}`\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (!response.ok) {\n      throw new Error('API submission failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error;\n  }\n}; ","import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport { db } from \"../../config/firebase\";\r\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { submitRegistration } from \"../../services/api\";\r\n\r\ninterface IContactValues {\r\n  name?: string;\r\n  contactNumber?: string;\r\n}\r\n\r\ninterface IRegistrationValues {\r\n  name?: string;\r\n  email?: string;\r\n  age?: string;\r\n  standard?: string;\r\n  gender?: string;\r\n  subject?: string;\r\n  institution?: string;\r\n  yearOfStudy?: string;\r\n  yearOfCompletion?: string;\r\n  district?: string;\r\n  otherDistrict?: string;\r\n  localBody?: string;\r\n  contactNumber?: string;\r\n  whatsappNumber?: string;\r\n  isDifferentWhatsApp?: string;\r\n}\r\n\r\ninterface APIRegistrationResponse {\r\n  message: string;\r\n  status: string;\r\n  data: {\r\n    id: number;\r\n    name: string;\r\n    mobile: string;\r\n  }\r\n}\r\n\r\nconst initialRegistrationValues: IRegistrationValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  standard: \"\",\r\n  gender: \"\",\r\n  subject: \"\",\r\n  institution: \"\",\r\n  yearOfStudy: \"1\",\r\n  yearOfCompletion: \"2025\",\r\n  district: \"\",\r\n  otherDistrict: \"\",\r\n  localBody: \"\",\r\n  contactNumber: \"\",\r\n  whatsappNumber: \"\",\r\n  isDifferentWhatsApp: 'no',\r\n};\r\n\r\nconst initialContactValues: IContactValues = {\r\n  name: \"\",\r\n  contactNumber: \"\",\r\n};\r\n\r\nexport const useForm = <T extends IRegistrationValues | IContactValues>(\r\n  validate: (values: T) => T,\r\n  formType: 'registration' | 'contact' = 'registration'\r\n) => {\r\n  const history = useHistory();\r\n  const [formState, setFormState] = useState<{\r\n    values: T;\r\n    errors: T;\r\n  }>({\r\n    values: (formType === 'registration' ? initialRegistrationValues : initialContactValues) as T,\r\n    errors: (formType === 'registration' ? initialRegistrationValues : initialContactValues) as T,\r\n  });\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add registration data to Firestore\r\n        const registrationsRef = collection(db, 'registrations');\r\n        await addDoc(registrationsRef, {\r\n          ...values,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        let response: APIRegistrationResponse | null = null;\r\n        // Submit to external API\r\n        if (formType === 'registration') {\r\n          response = await submitRegistration({\r\n            event_id: 84,\r\n            mobile: (values as IRegistrationValues).contactNumber || '',\r\n            name: values.name || '',\r\n            age: (values as IRegistrationValues).age || '',\r\n            sex: (values as IRegistrationValues).gender === 'male' ? 'Male' : 'Female',\r\n            whatsapp: (values as IRegistrationValues).whatsappNumber || (values as IRegistrationValues).contactNumber || '',\r\n            email: (values as IRegistrationValues).email || '',\r\n            class: (values as IRegistrationValues).standard || '',\r\n            subject: (values as IRegistrationValues).subject || '',\r\n            institution: (values as IRegistrationValues).institution || '',\r\n            year_of_study: (values as IRegistrationValues).yearOfStudy || '1',\r\n            year_of_completion: (values as IRegistrationValues).yearOfCompletion || '2025',\r\n            district_name: (values as IRegistrationValues).district || '',\r\n            district_name_other: (values as IRegistrationValues).otherDistrict || '',\r\n            local_body: (values as IRegistrationValues).localBody || '',\r\n          });\r\n        }\r\n\r\n        console.log(response);\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: (formType === 'registration' ? { ...initialRegistrationValues } : { ...initialContactValues }) as T,\r\n          errors: (formType === 'registration' ? { ...initialRegistrationValues } : { ...initialContactValues }) as T,\r\n        });\r\n\r\n        // Scroll to top first\r\n        scrollToTop();\r\n\r\n        // Show success notification after scrolling\r\n        setTimeout(() => {\r\n          notification[\"success\"]({\r\n            message: response?.message || \"Registration Successful\",\r\n            description: \"Thank you for registering! We'll contact you soon.\",\r\n            duration: 3,\r\n          });\r\n        }, 500);\r\n\r\n        // Redirect to home page after notification\r\n        setTimeout(() => {\r\n          history.push('/');\r\n        }, 2500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit registration. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: string } }\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleContact = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add contact message to Firestore\r\n        const contactsRef = collection(db, 'contacts');\r\n        await addDoc(contactsRef, {\r\n          name: values.name,\r\n          contactNumber: values.contactNumber,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: { ...initialContactValues } as T,\r\n          errors: { ...initialContactValues } as T,\r\n        });\r\n\r\n        // Show success notification\r\n        notification[\"success\"]({\r\n          message: \"Message Sent\",\r\n          description: \"Thank you for contacting us! We'll get back to you soon.\",\r\n          duration: 3,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Contact form error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to send message. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    handleContact,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n","import { RegisterValues } from \"../../components/RegisterForm/types\";\r\n\r\nconst validate = (values: RegisterValues): RegisterValues => {\r\n  let errors: RegisterValues = {};\r\n  \r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n\r\n  if (!values.gender) {\r\n    errors.gender = \"Gender is required\";\r\n  }\r\n\r\n  if (!values.age) {\r\n    errors.age = \"Age is required\";\r\n  } else if (isNaN(Number(values.age)) || Number(values.age) < 0) {\r\n    errors.age = \"Please enter a valid age\";\r\n  }\r\n\r\n  if (values.email && !/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  } else if (!/^\\d{10}$/.test(values.contactNumber)) {\r\n    errors.contactNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (values.whatsappNumber && !/^\\d{10}$/.test(values.whatsappNumber)) {\r\n    errors.whatsappNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateContact = (values: any) => {\r\n  let errors: any = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n"],"names":["Content","styled","Container","TextWrapper","withTranslation","_ref","title","content","t","_jsxs","children","_jsx","RegisterContainer","LeftColumnWrapper","LeftColumn","FormGroup","Span","ButtonContainer","Label","StyledSelect","Select","Option","_DistrictCities","id","values","errors","handleChange","originalHandleChange","handleSubmit","useForm","validate","e","ValidationType","_ref2","type","ErrorMessage","getYearSuffix","year","districts","Object","keys","DistrictCities","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","name","placeholder","value","onChange","target","gutter","age","standard","undefined","map","level","subject","institution","includes","yearOfStudy","yearOfCompletion","district","otherDistrict","_Fragment","localBody","city","contactNumber","isDifferentWhatsApp","whatsappNumber","email","Button","StyledInput","htmlFor","initialRegistrationValues","gender","initialContactValues","formType","arguments","length","history","useHistory","formState","setFormState","useState","event","prevState","async","preventDefault","every","error","registrationsRef","collection","db","addDoc","timestamp","serverTimestamp","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","json","console","submitRegistration","event_id","mobile","sex","whatsapp","class","year_of_study","year_of_completion","district_name","district_name_other","local_body","log","window","scrollTo","top","behavior","setTimeout","_response","notification","message","description","duration","push","handleContact","contactsRef","validateContact","isNaN","Number","test"],"sourceRoot":""}