{"version":3,"file":"static/js/310.20314e7b.chunk.js","mappings":"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","sources":["components/Block/styles.ts","components/Block/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","common/utils/validationRules.ts","common/utils/useForm.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgba(36,182,200,255);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport { validateContact } from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../common/Input\";\r\nimport { ContactContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id, t }: ContactProps) => {\r\n  const { values, errors, handleChange, handleContact } = useForm(validateContact, 'contact');\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type as keyof typeof errors];\r\n    return <Span>{ErrorMessage}</Span>;\r\n  };\r\n\r\n  return (\r\n    <ContactContainer id={id}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\" triggerOnce>\r\n            <Block title={title} content={content} />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"right\" triggerOnce>\r\n            <FormGroup autoComplete=\"off\" onSubmit={handleContact}>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"tel\"\r\n                  name=\"contactNumber\"\r\n                  placeholder=\"Your Contact\"\r\n                  value={values.contactNumber || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"contactNumber\" />\r\n              </Col>\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">{t(\"Submit\")}</Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(placeholder)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import { RegisterValues } from \"../../components/RegisterForm/types\";\r\n\r\nconst validate = (values: RegisterValues): RegisterValues => {\r\n  let errors: RegisterValues = {};\r\n  \r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n\r\n  if (!values.gender) {\r\n    errors.gender = \"Gender is required\";\r\n  }\r\n\r\n  if (!values.age) {\r\n    errors.age = \"Age is required\";\r\n  } else if (isNaN(Number(values.age)) || Number(values.age) < 0) {\r\n    errors.age = \"Please enter a valid age\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  } else if (!/^\\d{10}$/.test(values.contactNumber)) {\r\n    errors.contactNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  if (values.whatsappNumber && !/^\\d{10}$/.test(values.whatsappNumber)) {\r\n    errors.whatsappNumber = \"Please enter a valid 10-digit number\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validateContact = (values: any) => {\r\n  let errors: any = {};\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.contactNumber) {\r\n    errors.contactNumber = \"Contact number is required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport { db } from \"../../config/firebase\";\r\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface IContactValues {\r\n  name?: string;\r\n  contactNumber?: string;\r\n}\r\n\r\ninterface IRegistrationValues {\r\n  name?: string;\r\n  email?: string;\r\n  age?: string;\r\n  standard?: string;\r\n  gender?: string;\r\n  subject?: string;\r\n  institution?: string;\r\n  yearOfStudy?: string;\r\n  yearOfCompletion?: string;\r\n  district?: string;\r\n  otherDistrict?: string;\r\n  localBody?: string;\r\n  contactNumber?: string;\r\n  whatsappNumber?: string;\r\n  isDifferentWhatsApp?: string;\r\n}\r\n\r\nconst initialRegistrationValues: IRegistrationValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  standard: \"\",\r\n  gender: \"\",\r\n  subject: \"\",\r\n  institution: \"\",\r\n  yearOfStudy: \"\",\r\n  yearOfCompletion: \"\",\r\n  district: \"\",\r\n  otherDistrict: \"\",\r\n  localBody: \"\",\r\n  contactNumber: \"\",\r\n  whatsappNumber: \"\",\r\n  isDifferentWhatsApp: 'no',\r\n};\r\n\r\nconst initialContactValues: IContactValues = {\r\n  name: \"\",\r\n  contactNumber: \"\",\r\n};\r\n\r\nexport const useForm = <T extends IRegistrationValues | IContactValues>(\r\n  validate: (values: T) => T,\r\n  formType: 'registration' | 'contact' = 'registration'\r\n) => {\r\n  const history = useHistory();\r\n  const [formState, setFormState] = useState<{\r\n    values: T;\r\n    errors: T;\r\n  }>({\r\n    values: (formType === 'registration' ? initialRegistrationValues : initialContactValues) as T,\r\n    errors: (formType === 'registration' ? initialRegistrationValues : initialContactValues) as T,\r\n  });\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add registration data to Firestore\r\n        const registrationsRef = collection(db, 'registrations');\r\n        await addDoc(registrationsRef, {\r\n          ...values,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: (formType === 'registration' ? { ...initialRegistrationValues } : { ...initialContactValues }) as T,\r\n          errors: (formType === 'registration' ? { ...initialRegistrationValues } : { ...initialContactValues }) as T,\r\n        });\r\n\r\n        // Scroll to top first\r\n        scrollToTop();\r\n\r\n        // Show success notification after scrolling\r\n        setTimeout(() => {\r\n          notification[\"success\"]({\r\n            message: \"Registration Successful\",\r\n            description: \"Thank you for registering! We'll contact you soon.\",\r\n            duration: 3,\r\n          });\r\n        }, 500);\r\n\r\n        // Redirect to home page after notification\r\n        setTimeout(() => {\r\n          history.push('/');\r\n        }, 2500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit registration. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name: string; value: string } }\r\n  ) => {\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleContact = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        // Add contact message to Firestore\r\n        const contactsRef = collection(db, 'contacts');\r\n        await addDoc(contactsRef, {\r\n          name: values.name,\r\n          contactNumber: values.contactNumber,\r\n          timestamp: serverTimestamp()\r\n        });\r\n\r\n        // Reset form state\r\n        setFormState({\r\n          values: { ...initialContactValues } as T,\r\n          errors: { ...initialContactValues } as T,\r\n        });\r\n\r\n        // Show success notification\r\n        notification[\"success\"]({\r\n          message: \"Message Sent\",\r\n          description: \"Thank you for contacting us! We'll get back to you soon.\",\r\n          duration: 3,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Contact form error:', error);\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to send message. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    handleContact,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n"],"names":["Content","styled","Container","TextWrapper","withTranslation","_ref","title","content","t","_jsxs","children","_jsx","ContactContainer","FormGroup","Span","ButtonContainer","id","values","errors","handleChange","handleContact","useForm","validateContact","ValidationType","_ref2","type","ErrorMessage","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","name","placeholder","value","onChange","contactNumber","Button","StyledInput","Label","htmlFor","gender","age","isNaN","Number","email","test","whatsappNumber","initialRegistrationValues","standard","subject","institution","yearOfStudy","yearOfCompletion","district","otherDistrict","localBody","isDifferentWhatsApp","initialContactValues","validate","formType","arguments","length","undefined","history","useHistory","formState","setFormState","useState","event","target","prevState","handleSubmit","async","preventDefault","Object","every","error","registrationsRef","collection","db","addDoc","timestamp","serverTimestamp","window","scrollTo","top","behavior","setTimeout","notification","message","description","duration","push","console","contactsRef"],"sourceRoot":""}