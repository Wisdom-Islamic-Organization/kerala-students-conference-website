{"version":3,"file":"static/js/13.b5bf772a.chunk.js","mappings":"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","sources":["components/HeroBlock/styles.ts","components/HeroBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeroContainer = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 0;\r\n  padding-top: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const BackgroundSlider = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const BackgroundImage = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  opacity: 0;\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); // Adjust opacity here\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 2;\r\n  text-align: center;\r\n  padding: 60px 20px 0;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-family: \"ML TT Thunchan\", \"Manjari\", \"Noto Sans Malayalam\", system-ui;\r\n  color: #ffffff;\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-family: \"ML TT Thunchan\", \"Manjari\", \"Noto Sans Malayalam\", system-ui;\r\n  color: #ffffff;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.p`\r\n  font-family: \"ML TT Thunchan\", \"Manjari\", \"Noto Sans Malayalam\", system-ui;\r\n  color: #ffffff;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  \r\n  button {\r\n    color: #fff;\r\n    border: ${props => props.color === 'transparent' ? '2px solid #fff' : 'none'};\r\n    \r\n    &:hover {\r\n      color: #fff;\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n  \r\n  @media screen and (max-width: 480px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    button {\r\n      width: 200px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountdownContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  margin: 1.5rem 0;\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    gap: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CountdownItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 8px;\r\n  min-width: 80px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 0.5rem 0.75rem;\r\n    min-width: 60px;\r\n  }\r\n`;\r\n\r\nexport const CountdownNumber = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  line-height: 1;\r\n  margin-bottom: 0.25rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const CountdownLabel = styled.div`\r\n  font-size: 0.875rem;\r\n  color: #ffffff;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Button } from \"../../common/Button\";\r\nimport {\r\n  HeroContainer,\r\n  BackgroundSlider,\r\n  BackgroundImage,\r\n  Overlay,\r\n  ContentWrapper,\r\n  Title,\r\n  Subtitle,\r\n  Description,\r\n  ButtonGroup,\r\n  CountdownContainer,\r\n  CountdownItem,\r\n  CountdownNumber,\r\n  CountdownLabel\r\n} from \"./styles\";\r\nimport { HeroBlockProps } from \"./types\";\r\nimport { getAssetPath } from \"../../utils/paths\";\r\n\r\nconst HeroBlock = ({ title, subtitle, description, buttons, backgroundImages }: HeroBlockProps) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const imageInterval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) => \r\n        prevIndex === backgroundImages.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 3000);\r\n\r\n    return () => clearInterval(imageInterval);\r\n  }, [backgroundImages.length]);\r\n\r\n  useEffect(() => {\r\n    const targetDate = new Date('2025-05-11T10:30:00Z'); // 4:00 PM IST in UTC\r\n\r\n    const timer = setInterval(() => {\r\n      const now = new Date();\r\n      const difference = targetDate.getTime() - now.getTime();\r\n\r\n      if (difference <= 0) {\r\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n        clearInterval(timer);\r\n        return;\r\n      }\r\n\r\n      setTimeLeft({\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n        minutes: Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)),\r\n        seconds: Math.floor((difference % (1000 * 60)) / 1000)\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const handleClick = (link: string) => {\r\n    if (link.startsWith('/')) {\r\n      // Route navigation\r\n      window.location.hash = link;\r\n    } else if (link.startsWith('#')) {\r\n      // Smooth scroll to section\r\n      const element = document.getElementById(link.substring(1));\r\n      if (element) {\r\n        const headerOffset = 80;\r\n        const elementPosition = element.getBoundingClientRect().top;\r\n        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;\r\n\r\n        window.scrollTo({\r\n          top: offsetPosition,\r\n          behavior: \"smooth\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeroContainer id=\"hero\">\r\n      <BackgroundSlider>\r\n        {backgroundImages.map((image, index) => (\r\n          <BackgroundImage \r\n            key={index}\r\n            src={getAssetPath(image)}\r\n            style={{\r\n              opacity: index === currentImageIndex ? 1 : 0,\r\n              transition: 'opacity 1s ease-in-out'\r\n            }}\r\n          />\r\n        ))}\r\n      </BackgroundSlider>\r\n      <Overlay />\r\n      <ContentWrapper>\r\n        <Title>{title}</Title>\r\n        {subtitle && <Subtitle>{subtitle}</Subtitle>}\r\n        {description && <Description>{description}</Description>}\r\n        <CountdownContainer>\r\n          <CountdownItem>\r\n            <CountdownNumber>{timeLeft.days}</CountdownNumber>\r\n            <CountdownLabel>Days</CountdownLabel>\r\n          </CountdownItem>\r\n          <CountdownItem>\r\n            <CountdownNumber>{timeLeft.hours}</CountdownNumber>\r\n            <CountdownLabel>Hours</CountdownLabel>\r\n          </CountdownItem>\r\n          <CountdownItem>\r\n            <CountdownNumber>{timeLeft.minutes}</CountdownNumber>\r\n            <CountdownLabel>Minutes</CountdownLabel>\r\n          </CountdownItem>\r\n          <CountdownItem>\r\n            <CountdownNumber>{timeLeft.seconds}</CountdownNumber>\r\n            <CountdownLabel>Seconds</CountdownLabel>\r\n          </CountdownItem>\r\n        </CountdownContainer>\r\n        <ButtonGroup>\r\n          {buttons.map((button, index) => (\r\n            <Button\r\n              key={index}\r\n              color={button.color}\r\n              onClick={() => handleClick(button.link)}\r\n            >\r\n              {button.title}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </ContentWrapper>\r\n    </HeroContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(HeroBlock);\r\n"],"names":["HeroContainer","styled","div","BackgroundSlider","BackgroundImage","img","Overlay","ContentWrapper","Title","h1","Description","p","Subtitle","ButtonGroup","props","color","CountdownContainer","CountdownItem","CountdownNumber","CountdownLabel","withTranslation","_ref","title","subtitle","description","buttons","backgroundImages","currentImageIndex","setCurrentImageIndex","useState","timeLeft","setTimeLeft","days","hours","minutes","seconds","useEffect","imageInterval","setInterval","prevIndex","length","clearInterval","targetDate","Date","timer","now","difference","getTime","Math","floor","_jsxs","id","children","_jsx","map","image","index","src","getAssetPath","style","opacity","transition","button","Button","onClick","link","startsWith","window","location","hash","element","document","getElementById","substring","headerOffset","offsetPosition","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","handleClick"],"sourceRoot":""}